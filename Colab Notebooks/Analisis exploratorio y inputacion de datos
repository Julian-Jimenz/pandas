{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNP78H6Hkjl3q76RWt0REcP"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["El analisis exploratorio de datos es conocer la estructura de los datos,esta técnica te ayudarán a limpiar y estructurar la información antes de aplicar algoritmos avanzados.\n","\n","pasos para hacer un analisis exploratorio de datos:\n","\n","\n","1.   Hacer preguntas\n","2.   Determinar el tamaño de los datos\n","3.   Categorizar las variables\n","4.   Limpieza y validacion de datos\n","5.   Establecer relaciones\n","\n","\n","\n","\n","\n"],"metadata":{"id":"sTz_1O1PtTU1"}},{"cell_type":"code","source":["#Librerias con las que vamos a trabajar :\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import os"],"metadata":{"id":"4fO427Je5wr1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# URL donde nos vamos a conectar para optener los datos\n","# Este DTF contiene datos de pinguinos como isla donde estan ubicados, el genero etc...\n","\n","ruta = 'https://raw.githubusercontent.com/allisonhorst/palmerpenguins/master/inst/extdata/penguins.csv'\n","df_origina = pd.read_csv(ruta)\n","df_origina"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":193},"id":"TJW6u5Kv5rfc","executionInfo":{"status":"error","timestamp":1745505825106,"user_tz":300,"elapsed":193,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"416c2060-738a-4baa-ed9e-f0b638611168"},"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'pd' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-4c352045cc34>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mruta\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'https://raw.githubusercontent.com/allisonhorst/palmerpenguins/master/inst/extdata/penguins.csv'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mdf_origina\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mruta\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mdf_origina\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}]},{"cell_type":"code","source":["df_origina.duplicated().any() # buscar datos duplicados\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bPtQhQ-pmBbI","executionInfo":{"status":"ok","timestamp":1743784332696,"user_tz":300,"elapsed":29,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"ce3da2db-1437-4399-83fc-04bd22fba4a5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.False_"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["# Existen valores nulos en el conjunto de datos?\n","\n","df_origina.isnull().any() # buscar datos nulos\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"2uQiRvI19DaP","executionInfo":{"status":"ok","timestamp":1743784333316,"user_tz":300,"elapsed":17,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"428bed22-1665-4b3d-f1fd-f6ef1f1567df"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["species              False\n","island               False\n","bill_length_mm        True\n","bill_depth_mm         True\n","flipper_length_mm     True\n","body_mass_g           True\n","sex                   True\n","year                 False\n","dtype: bool"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>species</th>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>island</th>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>bill_length_mm</th>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>bill_depth_mm</th>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>flipper_length_mm</th>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>body_mass_g</th>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>year</th>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> bool</label>"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["# Cuantos valores nulos tenemos por cada variable ?\n","\n","df_origina.isnull().sum() # mostrar la cantidad de datos nulos por variable"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"C4Smd21MULys","executionInfo":{"status":"ok","timestamp":1743784335416,"user_tz":300,"elapsed":14,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"6e76d5c9-6f0b-4c92-b2b1-355a7aadacfe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["species               0\n","island                0\n","bill_length_mm        2\n","bill_depth_mm         2\n","flipper_length_mm     2\n","body_mass_g           2\n","sex                  11\n","year                  0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>species</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>island</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>bill_length_mm</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>bill_depth_mm</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>flipper_length_mm</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>body_mass_g</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>year</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["df_origina.dropna(inplace=True) # eliminar datos nulos"],"metadata":{"id":"zAi6C4SdT-s8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# mostrar si tengo datos en 0 o menores a 0\n","df_numerico = df_origina.select_dtypes(include=['number']) # extraer las filas numericas\n","\n","ceros = (df_numerico < 0).values.any()\n","print(ceros)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MThRMy618Imm","executionInfo":{"status":"ok","timestamp":1743784337807,"user_tz":300,"elapsed":53,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"d61b808c-baae-4753-f557-1b2d802ad28a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n"]}]},{"cell_type":"code","source":["df = df_origina.copy() # crear una copia del  DataFrame original\n","df.isna().sum() # verificar que si se hubieran eliminado los datos nulos"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"rYXekUL6_mq9","executionInfo":{"status":"ok","timestamp":1743784338995,"user_tz":300,"elapsed":31,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"513c02dd-7729-480e-e8b6-b7c557e5a762"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["species              0\n","island               0\n","bill_length_mm       0\n","bill_depth_mm        0\n","flipper_length_mm    0\n","body_mass_g          0\n","sex                  0\n","year                 0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>species</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>island</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>bill_length_mm</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>bill_depth_mm</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>flipper_length_mm</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>body_mass_g</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>year</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["# Que tipo de datos son las variables del conjunto de datos?\n","df.dtypes\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"ngb4FEWmPKAL","executionInfo":{"status":"ok","timestamp":1743784340099,"user_tz":300,"elapsed":21,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"b30c8b03-c912-476a-e3fc-19ad81c652b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["species               object\n","island                object\n","bill_length_mm       float64\n","bill_depth_mm        float64\n","flipper_length_mm    float64\n","body_mass_g          float64\n","sex                   object\n","year                   int64\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>species</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>island</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>bill_length_mm</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>bill_depth_mm</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>flipper_length_mm</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>body_mass_g</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>year</th>\n","      <td>int64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["# Cuantas variables de cada tipo de dato tenemos en el conjunto de datos\n","df.dtypes.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"0-80_m2YQaay","executionInfo":{"status":"ok","timestamp":1743784341465,"user_tz":300,"elapsed":17,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"20a55cdc-8529-4d5a-e096-29e2fc687d4b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float64    4\n","object     3\n","int64      1\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>float64</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>object</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>int64</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["# Cuantas Filas y columnas tenemos en el conjunto de datos\n","filas_y_columnas= df.shape\n","filas_y_columnas= list(filas_y_columnas)\n","print(f'El conjunto de datos tiene {filas_y_columnas[0]} filas y {filas_y_columnas[1]} columnas')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JK0ntz75Q4Cs","executionInfo":{"status":"ok","timestamp":1743784342760,"user_tz":300,"elapsed":13,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"e2c26802-0c63-4496-9b66-52d6bf5fc20e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["El conjunto de datos tiene 333 filas y 8 columnas\n"]}]},{"cell_type":"code","source":["# Contar cuantas especies tenermos en el dtf ?\n","\n","especies = df['species'].value_counts().reset_index()\n","\n","especies.columns = ['Especie', 'Cantidad']\n","print(especies)\n","colores = ['blue', 'green', 'orange']\n","plt.bar(especies['Especie'],especies['Cantidad'],color=colores)\n","plt.title('Especies de Pinguinos')\n","plt.xlabel('Especies')\n","plt.ylabel('Cantidad' )\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":541},"id":"bQOTIcOyOrrs","executionInfo":{"status":"ok","timestamp":1743784343843,"user_tz":300,"elapsed":206,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"9d0755b2-006e-41ab-c9ae-9cd3e59f1174"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Especie  Cantidad\n","0     Adelie       146\n","1     Gentoo       119\n","2  Chinstrap        68\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["\n","\n","\n","**MEDIDAS DE TENDENCIA CENTRAL**\n","\n","\n","1.   Promedio\n","2.   Mediana\n","3.   Moda\n","\n"],"metadata":{"id":"Rk3ygiMdaJJL"}},{"cell_type":"code","source":["# filtrar los datos numericos y sacar su promedio ?\n","\n","promedio = df.select_dtypes(include=['number']).mean().reset_index()\n","promedio.columns = ['Variable', 'Promedio']\n","# Mostrar el resultado\n","promedio\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"IjMu2ZItWS4d","executionInfo":{"status":"error","timestamp":1745246494161,"user_tz":300,"elapsed":80,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"75199628-8338-48d2-a4cb-a393ea6ed001"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-fa23b8f3dfcf>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# filtrar los datos numericos y sacar su promedio ?\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mpromedio\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mselect_dtypes\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'number'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mpromedio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'Variable'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Promedio'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Mostrar el resultado\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}]},{"cell_type":"code","source":["# filtrar los datos numericos y sacar su Mediana ?\n","\n","mediana = df.select_dtypes(include=['number']).median().reset_index()\n","mediana.columns = ['Variable', 'mediana']\n","\n","mediana"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"2_x6UJUNa6CM","executionInfo":{"status":"ok","timestamp":1743784349224,"user_tz":300,"elapsed":45,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"a268e402-6e8d-421f-d67c-e035fab9b0ca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Variable  mediana\n","0     bill_length_mm     44.5\n","1      bill_depth_mm     17.3\n","2  flipper_length_mm    197.0\n","3        body_mass_g   4050.0\n","4               year   2008.0"],"text/html":["\n","  <div id=\"df-433a464d-d14a-4bc4-a7b3-76fce106bea3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Variable</th>\n","      <th>mediana</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>bill_length_mm</td>\n","      <td>44.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>bill_depth_mm</td>\n","      <td>17.3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>flipper_length_mm</td>\n","      <td>197.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>body_mass_g</td>\n","      <td>4050.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>year</td>\n","      <td>2008.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-433a464d-d14a-4bc4-a7b3-76fce106bea3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-433a464d-d14a-4bc4-a7b3-76fce106bea3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-433a464d-d14a-4bc4-a7b3-76fce106bea3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eac6dc8f-ffca-4e35-96df-c169cfc9be35\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eac6dc8f-ffca-4e35-96df-c169cfc9be35')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eac6dc8f-ffca-4e35-96df-c169cfc9be35 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2272c447-2640-48e9-8773-d9ae5e00fd21\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('mediana')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2272c447-2640-48e9-8773-d9ae5e00fd21 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('mediana');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mediana","summary":"{\n  \"name\": \"mediana\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Variable\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"bill_depth_mm\",\n          \"year\",\n          \"flipper_length_mm\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mediana\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1767.431759078692,\n        \"min\": 17.3,\n        \"max\": 4050.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          17.3,\n          2008.0,\n          197.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["# filtrar los datos numericos y sacar su Mediana ?\n","moda = df.mode()\n","moda"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"fujIoZw3kGl-","executionInfo":{"status":"ok","timestamp":1743784350658,"user_tz":300,"elapsed":24,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"64eaa6e9-3f0c-4c49-b040-08a26a786f6b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  species  island  bill_length_mm  bill_depth_mm  flipper_length_mm  \\\n","0  Adelie  Biscoe            41.1           17.0              190.0   \n","\n","   body_mass_g   sex  year  \n","0       3800.0  male  2009  "],"text/html":["\n","  <div id=\"df-63f656fe-5cd3-43c6-874f-a9f2db597f10\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>species</th>\n","      <th>island</th>\n","      <th>bill_length_mm</th>\n","      <th>bill_depth_mm</th>\n","      <th>flipper_length_mm</th>\n","      <th>body_mass_g</th>\n","      <th>sex</th>\n","      <th>year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adelie</td>\n","      <td>Biscoe</td>\n","      <td>41.1</td>\n","      <td>17.0</td>\n","      <td>190.0</td>\n","      <td>3800.0</td>\n","      <td>male</td>\n","      <td>2009</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63f656fe-5cd3-43c6-874f-a9f2db597f10')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-63f656fe-5cd3-43c6-874f-a9f2db597f10 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-63f656fe-5cd3-43c6-874f-a9f2db597f10');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_b2747402-59f9-4f4d-9435-dc0d118e1ab5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('moda')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b2747402-59f9-4f4d-9435-dc0d118e1ab5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('moda');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"moda","summary":"{\n  \"name\": \"moda\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"species\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Adelie\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"island\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Biscoe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bill_length_mm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 41.1,\n        \"max\": 41.1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          41.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bill_depth_mm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 17.0,\n        \"max\": 17.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"flipper_length_mm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 190.0,\n        \"max\": 190.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          190.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"body_mass_g\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 3800.0,\n        \"max\": 3800.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          3800.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2009,\n        \"max\": 2009,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2009\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":86}]},{"cell_type":"markdown","source":["**MEDIDAD DE DISPERSION **\n","\n","1. Cual e sel valor maximo de las variables?\n","\n","2. cual es el valor minimo de las variables\n","\n","3. cual es el rango de las variables\n","\n","4. cual es la desviasion estandar de las variables\n"],"metadata":{"id":"so2mKpoz7gEK"}},{"cell_type":"code","source":["numericos = df.select_dtypes(include=['number'])\n","numericos"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"kveXrbVL_Oe0","executionInfo":{"status":"ok","timestamp":1743784353093,"user_tz":300,"elapsed":20,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"0a5b8e92-f987-4076-81b1-73676b713061"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g  year\n","0              39.1           18.7              181.0       3750.0  2007\n","1              39.5           17.4              186.0       3800.0  2007\n","2              40.3           18.0              195.0       3250.0  2007\n","4              36.7           19.3              193.0       3450.0  2007\n","5              39.3           20.6              190.0       3650.0  2007\n","..              ...            ...                ...          ...   ...\n","339            55.8           19.8              207.0       4000.0  2009\n","340            43.5           18.1              202.0       3400.0  2009\n","341            49.6           18.2              193.0       3775.0  2009\n","342            50.8           19.0              210.0       4100.0  2009\n","343            50.2           18.7              198.0       3775.0  2009\n","\n","[333 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-f2987b16-3554-4c3a-998a-cd7d0a399725\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>bill_length_mm</th>\n","      <th>bill_depth_mm</th>\n","      <th>flipper_length_mm</th>\n","      <th>body_mass_g</th>\n","      <th>year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39.1</td>\n","      <td>18.7</td>\n","      <td>181.0</td>\n","      <td>3750.0</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>39.5</td>\n","      <td>17.4</td>\n","      <td>186.0</td>\n","      <td>3800.0</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>40.3</td>\n","      <td>18.0</td>\n","      <td>195.0</td>\n","      <td>3250.0</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>36.7</td>\n","      <td>19.3</td>\n","      <td>193.0</td>\n","      <td>3450.0</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>39.3</td>\n","      <td>20.6</td>\n","      <td>190.0</td>\n","      <td>3650.0</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>339</th>\n","      <td>55.8</td>\n","      <td>19.8</td>\n","      <td>207.0</td>\n","      <td>4000.0</td>\n","      <td>2009</td>\n","    </tr>\n","    <tr>\n","      <th>340</th>\n","      <td>43.5</td>\n","      <td>18.1</td>\n","      <td>202.0</td>\n","      <td>3400.0</td>\n","      <td>2009</td>\n","    </tr>\n","    <tr>\n","      <th>341</th>\n","      <td>49.6</td>\n","      <td>18.2</td>\n","      <td>193.0</td>\n","      <td>3775.0</td>\n","      <td>2009</td>\n","    </tr>\n","    <tr>\n","      <th>342</th>\n","      <td>50.8</td>\n","      <td>19.0</td>\n","      <td>210.0</td>\n","      <td>4100.0</td>\n","      <td>2009</td>\n","    </tr>\n","    <tr>\n","      <th>343</th>\n","      <td>50.2</td>\n","      <td>18.7</td>\n","      <td>198.0</td>\n","      <td>3775.0</td>\n","      <td>2009</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>333 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2987b16-3554-4c3a-998a-cd7d0a399725')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f2987b16-3554-4c3a-998a-cd7d0a399725 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f2987b16-3554-4c3a-998a-cd7d0a399725');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7158d8b4-09e6-453d-ba68-e8f70736b914\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7158d8b4-09e6-453d-ba68-e8f70736b914')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7158d8b4-09e6-453d-ba68-e8f70736b914 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9b021f24-55c3-4a15-af87-c252949d6011\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('numericos')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9b021f24-55c3-4a15-af87-c252949d6011 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('numericos');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"numericos","summary":"{\n  \"name\": \"numericos\",\n  \"rows\": 333,\n  \"fields\": [\n    {\n      \"column\": \"bill_length_mm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.46866834264756,\n        \"min\": 32.1,\n        \"max\": 59.6,\n        \"num_unique_values\": 163,\n        \"samples\": [\n          46.9,\n          45.7,\n          52.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bill_depth_mm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9692354633199,\n        \"min\": 13.1,\n        \"max\": 21.5,\n        \"num_unique_values\": 79,\n        \"samples\": [\n          19.5,\n          18.7,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"flipper_length_mm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.01576528828788,\n        \"min\": 172.0,\n        \"max\": 231.0,\n        \"num_unique_values\": 54,\n        \"samples\": [\n          188.0,\n          223.0,\n          229.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"body_mass_g\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 805.2158019428966,\n        \"min\": 2700.0,\n        \"max\": 6300.0,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          4725.0,\n          3100.0,\n          5400.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2007,\n        \"max\": 2009,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2007,\n          2008,\n          2009\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["# Cual e sel valor maximo de las variables?\n","\n","maximo = numericos.max().reset_index()\n","maximo.columns = ['Variable', 'Maximo']\n","maximo"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"cmeBYor78BiE","executionInfo":{"status":"ok","timestamp":1743784355334,"user_tz":300,"elapsed":57,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"ad983875-60a9-409f-ef72-576b14c75410"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Variable  Maximo\n","0     bill_length_mm    59.6\n","1      bill_depth_mm    21.5\n","2  flipper_length_mm   231.0\n","3        body_mass_g  6300.0\n","4               year  2009.0"],"text/html":["\n","  <div id=\"df-9b63f235-3f7b-4b10-922e-161d9d6a3de1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Variable</th>\n","      <th>Maximo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>bill_length_mm</td>\n","      <td>59.6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>bill_depth_mm</td>\n","      <td>21.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>flipper_length_mm</td>\n","      <td>231.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>body_mass_g</td>\n","      <td>6300.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>year</td>\n","      <td>2009.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9b63f235-3f7b-4b10-922e-161d9d6a3de1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9b63f235-3f7b-4b10-922e-161d9d6a3de1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9b63f235-3f7b-4b10-922e-161d9d6a3de1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a80bcf7c-258d-4751-861e-906c982c61e5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a80bcf7c-258d-4751-861e-906c982c61e5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a80bcf7c-258d-4751-861e-906c982c61e5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1dabcbc8-c6cd-44b0-9c35-86b44bbce07b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('maximo')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1dabcbc8-c6cd-44b0-9c35-86b44bbce07b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('maximo');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"maximo","summary":"{\n  \"name\": \"maximo\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Variable\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"bill_depth_mm\",\n          \"year\",\n          \"flipper_length_mm\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Maximo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2688.8093725662293,\n        \"min\": 21.5,\n        \"max\": 6300.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          21.5,\n          2009.0,\n          231.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["# cual es el valor minimo de las variables ?\n","\n","minimo= numericos.min().reset_index()\n","minimo.columns = ['Variable', 'Minimo']\n","minimo"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"rn1w05i88OGt","executionInfo":{"status":"ok","timestamp":1743784356869,"user_tz":300,"elapsed":57,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"ed963850-6c5c-4719-ca0e-a4edb346fd25"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Variable  Minimo\n","0     bill_length_mm    32.1\n","1      bill_depth_mm    13.1\n","2  flipper_length_mm   172.0\n","3        body_mass_g  2700.0\n","4               year  2007.0"],"text/html":["\n","  <div id=\"df-6369e7ee-f6ee-41a0-ae26-588132e6f490\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Variable</th>\n","      <th>Minimo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>bill_length_mm</td>\n","      <td>32.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>bill_depth_mm</td>\n","      <td>13.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>flipper_length_mm</td>\n","      <td>172.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>body_mass_g</td>\n","      <td>2700.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>year</td>\n","      <td>2007.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6369e7ee-f6ee-41a0-ae26-588132e6f490')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6369e7ee-f6ee-41a0-ae26-588132e6f490 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6369e7ee-f6ee-41a0-ae26-588132e6f490');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3dd7fcfd-9dad-4217-a867-59a4aa9e0f28\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3dd7fcfd-9dad-4217-a867-59a4aa9e0f28')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3dd7fcfd-9dad-4217-a867-59a4aa9e0f28 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3046f248-28e6-40b1-81a4-547c0b399de7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('minimo')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3046f248-28e6-40b1-81a4-547c0b399de7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('minimo');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"minimo","summary":"{\n  \"name\": \"minimo\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Variable\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"bill_depth_mm\",\n          \"year\",\n          \"flipper_length_mm\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Minimo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1274.684852424316,\n        \"min\": 13.1,\n        \"max\": 2700.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          13.1,\n          2007.0,\n          172.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["# cual es el rango de las variables?\n","rango = maximo['Maximo'] - minimo['Minimo']\n","rango\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"ygcvbnuj841W","executionInfo":{"status":"ok","timestamp":1743784358129,"user_tz":300,"elapsed":19,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"b8904f04-37bc-4ccb-94ca-775088c14eb0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      27.5\n","1       8.4\n","2      59.0\n","3    3600.0\n","4       2.0\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>27.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8.4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>59.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3600.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["# cual es la desviasion estandar de las variables\n","\n","desviacion_estandar = numericos.std().reset_index()\n","desviacion_estandar.columns = ['Variable', 'Desviacion Estandar']\n","desviacion_estandar"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"WlA8p7BDEIw5","executionInfo":{"status":"ok","timestamp":1743784359295,"user_tz":300,"elapsed":56,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"a6be41bb-bcea-4271-9118-bc799893b3ca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Variable  Desviacion Estandar\n","0     bill_length_mm             5.468668\n","1      bill_depth_mm             1.969235\n","2  flipper_length_mm            14.015765\n","3        body_mass_g           805.215802\n","4               year             0.812944"],"text/html":["\n","  <div id=\"df-cb2817b8-168f-4f25-9c9a-05256a1d713a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Variable</th>\n","      <th>Desviacion Estandar</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>bill_length_mm</td>\n","      <td>5.468668</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>bill_depth_mm</td>\n","      <td>1.969235</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>flipper_length_mm</td>\n","      <td>14.015765</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>body_mass_g</td>\n","      <td>805.215802</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>year</td>\n","      <td>0.812944</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb2817b8-168f-4f25-9c9a-05256a1d713a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cb2817b8-168f-4f25-9c9a-05256a1d713a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cb2817b8-168f-4f25-9c9a-05256a1d713a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-395e6ad2-ba45-410f-b0f8-d32a0bafb571\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-395e6ad2-ba45-410f-b0f8-d32a0bafb571')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-395e6ad2-ba45-410f-b0f8-d32a0bafb571 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d2f5a6b4-c656-4092-aef6-43506ff017fa\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('desviacion_estandar')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d2f5a6b4-c656-4092-aef6-43506ff017fa button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('desviacion_estandar');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"desviacion_estandar","summary":"{\n  \"name\": \"desviacion_estandar\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Variable\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"bill_depth_mm\",\n          \"year\",\n          \"flipper_length_mm\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Desviacion Estandar\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 357.6513473610223,\n        \"min\": 0.812943875808839,\n        \"max\": 805.2158019428966,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.9692354633199,\n          0.812943875808839,\n          14.01576528828788\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["\n","# Crear el histograma para cada variable numérica\n","numericos.hist(bins=10, figsize=(10, 6), edgecolor='black', grid=False)\n","\n","# Configurar etiquetas\n","plt.suptitle(\"Histograma de Variables Numéricas\")\n","plt.xlabel(\"Valores\")\n","plt.ylabel(\"Frecuencia\")\n","\n","# Mostrar el histograma\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"039sWzF1FDWw","executionInfo":{"status":"ok","timestamp":1743784362211,"user_tz":300,"elapsed":550,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"d52324c2-8f48-4870-b4a9-1b4238173cbf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 6 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"yCX6gfZbg__X"}},{"cell_type":"markdown","source":["# **VALORES FLATANTES:**\n","\n","\n","---\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"NK4e_HhDgz1W"}},{"cell_type":"code","source":["#Instalar librerias\n","\n","! pip install --upgrade pip"],"metadata":{"id":"geYTer4Bg76i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745336502186,"user_tz":300,"elapsed":5845,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"8e6684b5-5e84-4745-d805-3a30dafec9ac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pip in /usr/local/lib/python3.11/dist-packages (24.1.2)\n","Collecting pip\n","  Downloading pip-25.0.1-py3-none-any.whl.metadata (3.7 kB)\n","Downloading pip-25.0.1-py3-none-any.whl (1.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.8/1.8 MB\u001b[0m \u001b[31m50.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: pip\n","  Attempting uninstall: pip\n","    Found existing installation: pip 24.1.2\n","    Uninstalling pip-24.1.2:\n","      Successfully uninstalled pip-24.1.2\n","Successfully installed pip-25.0.1\n"]}]},{"cell_type":"code","source":["!pip install pyjanitor missingno pyreadr seaborn"],"metadata":{"id":"VZMtPXwgil6t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745336506977,"user_tz":300,"elapsed":4795,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"51d8aef9-e56c-434b-f9bd-09e6035b72f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pyjanitor\n","  Downloading pyjanitor-0.31.0-py3-none-any.whl.metadata (6.1 kB)\n","Requirement already satisfied: missingno in /usr/local/lib/python3.11/dist-packages (0.5.2)\n","Collecting pyreadr\n","  Downloading pyreadr-0.5.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.4 kB)\n","Requirement already satisfied: seaborn in /usr/local/lib/python3.11/dist-packages (0.13.2)\n","Requirement already satisfied: natsort in /usr/local/lib/python3.11/dist-packages (from pyjanitor) (8.4.0)\n","Collecting pandas_flavor (from pyjanitor)\n","  Downloading pandas_flavor-0.7.0-py3-none-any.whl.metadata (6.7 kB)\n","Requirement already satisfied: multipledispatch in /usr/local/lib/python3.11/dist-packages (from pyjanitor) (1.0.0)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (from pyjanitor) (1.14.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from missingno) (2.0.2)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (from missingno) (3.10.0)\n","Requirement already satisfied: pandas>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from pyreadr) (2.2.2)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->missingno) (1.3.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib->missingno) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->missingno) (4.57.0)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->missingno) (1.4.8)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->missingno) (24.2)\n","Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib->missingno) (11.1.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->missingno) (3.2.3)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib->missingno) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.2.0->pyreadr) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.2.0->pyreadr) (2025.2)\n","Requirement already satisfied: xarray in /usr/local/lib/python3.11/dist-packages (from pandas_flavor->pyjanitor) (2025.1.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib->missingno) (1.17.0)\n","Downloading pyjanitor-0.31.0-py3-none-any.whl (215 kB)\n","Downloading pyreadr-0.5.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (411 kB)\n","Downloading pandas_flavor-0.7.0-py3-none-any.whl (8.4 kB)\n","Installing collected packages: pyreadr, pandas_flavor, pyjanitor\n","Successfully installed pandas_flavor-0.7.0 pyjanitor-0.31.0 pyreadr-0.5.3\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import os\n","import janitor # crear codigo para limpieza de datos\n","import missingno as msno # visualizar valores faltante\n","import pyreadr # leer archivos\n","import seaborn as sns # visualizacion\n"],"metadata":{"id":"K3AE_vC4jNrt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["url = '/content/diabetes_sintetico.csv'\n","diabetes = pd.read_csv(url)\n"],"metadata":{"id":"9i2DYGE7YfAN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["diabetes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"MCBgt0KHePYu","executionInfo":{"status":"ok","timestamp":1745080658229,"user_tz":300,"elapsed":50,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"d865e6a1-77ee-4912-bb59-61e6944f5e85"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Glucosa  PresionArterial  GrosorPiel    Insulina        IMC  \\\n","0    134.901425       -93.892663   38.993554  138.918054  24.624109   \n","1    115.852071         0.000000   34.246337   72.440714   0.000000   \n","2    139.430656       -59.021486   25.596304   59.090056  24.037900   \n","3   -165.690896        88.444539   18.530632   99.831277  26.460192   \n","4    112.975399       -70.240361   31.982233   91.490769  18.531927   \n","..          ...              ...         ...         ...        ...   \n","495  136.167301        75.783496   45.060929  153.507512        NaN   \n","496   88.882615      -106.965298   45.615036   98.673937  26.605185   \n","497 -114.289840              NaN   37.083662   55.906267  26.601199   \n","498   93.731452         0.000000   35.240625    0.000000  31.951859   \n","499    0.000000        88.588742   30.925269   62.754868  29.700256   \n","\n","     HistorialFamiliar  Edad  NivelActividad  Colesterol     HbA1c  \n","0                  NaN  59.0             1.0  103.275993  7.091831  \n","1             1.370269  79.0             2.0  221.938107  4.614203  \n","2             0.220864  28.0             4.0  138.632550  8.510625  \n","3             0.578375  60.0             2.0    0.000000  9.437401  \n","4             0.619614  34.0             2.0  160.826948  8.460611  \n","..                 ...   ...             ...         ...       ...  \n","495           0.223186  73.0             0.0  170.065744  7.084140  \n","496           1.216639  50.0             1.0  189.153011  7.634522  \n","497           0.562100  62.0             4.0 -116.544997  7.791281  \n","498           0.346992  53.0             2.0  126.817706  7.162301  \n","499           0.759503  37.0             2.0  145.275856  7.495203  \n","\n","[500 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-38b0b54d-4735-46bf-99f8-7ae1a5d95b2d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Glucosa</th>\n","      <th>PresionArterial</th>\n","      <th>GrosorPiel</th>\n","      <th>Insulina</th>\n","      <th>IMC</th>\n","      <th>HistorialFamiliar</th>\n","      <th>Edad</th>\n","      <th>NivelActividad</th>\n","      <th>Colesterol</th>\n","      <th>HbA1c</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>134.901425</td>\n","      <td>-93.892663</td>\n","      <td>38.993554</td>\n","      <td>138.918054</td>\n","      <td>24.624109</td>\n","      <td>NaN</td>\n","      <td>59.0</td>\n","      <td>1.0</td>\n","      <td>103.275993</td>\n","      <td>7.091831</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>115.852071</td>\n","      <td>0.000000</td>\n","      <td>34.246337</td>\n","      <td>72.440714</td>\n","      <td>0.000000</td>\n","      <td>1.370269</td>\n","      <td>79.0</td>\n","      <td>2.0</td>\n","      <td>221.938107</td>\n","      <td>4.614203</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>139.430656</td>\n","      <td>-59.021486</td>\n","      <td>25.596304</td>\n","      <td>59.090056</td>\n","      <td>24.037900</td>\n","      <td>0.220864</td>\n","      <td>28.0</td>\n","      <td>4.0</td>\n","      <td>138.632550</td>\n","      <td>8.510625</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-165.690896</td>\n","      <td>88.444539</td>\n","      <td>18.530632</td>\n","      <td>99.831277</td>\n","      <td>26.460192</td>\n","      <td>0.578375</td>\n","      <td>60.0</td>\n","      <td>2.0</td>\n","      <td>0.000000</td>\n","      <td>9.437401</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>112.975399</td>\n","      <td>-70.240361</td>\n","      <td>31.982233</td>\n","      <td>91.490769</td>\n","      <td>18.531927</td>\n","      <td>0.619614</td>\n","      <td>34.0</td>\n","      <td>2.0</td>\n","      <td>160.826948</td>\n","      <td>8.460611</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>136.167301</td>\n","      <td>75.783496</td>\n","      <td>45.060929</td>\n","      <td>153.507512</td>\n","      <td>NaN</td>\n","      <td>0.223186</td>\n","      <td>73.0</td>\n","      <td>0.0</td>\n","      <td>170.065744</td>\n","      <td>7.084140</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>88.882615</td>\n","      <td>-106.965298</td>\n","      <td>45.615036</td>\n","      <td>98.673937</td>\n","      <td>26.605185</td>\n","      <td>1.216639</td>\n","      <td>50.0</td>\n","      <td>1.0</td>\n","      <td>189.153011</td>\n","      <td>7.634522</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>-114.289840</td>\n","      <td>NaN</td>\n","      <td>37.083662</td>\n","      <td>55.906267</td>\n","      <td>26.601199</td>\n","      <td>0.562100</td>\n","      <td>62.0</td>\n","      <td>4.0</td>\n","      <td>-116.544997</td>\n","      <td>7.791281</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>93.731452</td>\n","      <td>0.000000</td>\n","      <td>35.240625</td>\n","      <td>0.000000</td>\n","      <td>31.951859</td>\n","      <td>0.346992</td>\n","      <td>53.0</td>\n","      <td>2.0</td>\n","      <td>126.817706</td>\n","      <td>7.162301</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>0.000000</td>\n","      <td>88.588742</td>\n","      <td>30.925269</td>\n","      <td>62.754868</td>\n","      <td>29.700256</td>\n","      <td>0.759503</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>145.275856</td>\n","      <td>7.495203</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38b0b54d-4735-46bf-99f8-7ae1a5d95b2d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-38b0b54d-4735-46bf-99f8-7ae1a5d95b2d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-38b0b54d-4735-46bf-99f8-7ae1a5d95b2d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e8609c61-88eb-4eae-a5c1-a459e2e57957\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e8609c61-88eb-4eae-a5c1-a459e2e57957')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e8609c61-88eb-4eae-a5c1-a459e2e57957 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_898040bd-0c63-4678-a342-d8016b364a86\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('diabetes')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_898040bd-0c63-4678-a342-d8016b364a86 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('diabetes');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"diabetes","summary":"{\n  \"name\": \"diabetes\",\n  \"rows\": 500,\n  \"fields\": [\n    {\n      \"column\": \"Glucosa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 78.51655272904931,\n        \"min\": -176.9037894796184,\n        \"max\": 235.58194471964163,\n        \"num_unique_values\": 424,\n        \"samples\": [\n          -176.9037894796184,\n          138.72359451156467,\n          136.82353579104702\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PresionArterial\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 52.85058583491139,\n        \"min\": -108.151937188371,\n        \"max\": 118.40126807403192,\n        \"num_unique_values\": 422,\n        \"samples\": [\n          68.33274968613686,\n          89.73064831384464,\n          85.98704171528107\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GrosorPiel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.155812407116944,\n        \"min\": -3.9625537819368937,\n        \"max\": 51.01683114180395,\n        \"num_unique_values\": 470,\n        \"samples\": [\n          32.716987106483444,\n          33.50221742113493,\n          40.73986763290033\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulina\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 79.68001731323577,\n        \"min\": -195.0595342876504,\n        \"max\": 259.65537839224305,\n        \"num_unique_values\": 425,\n        \"samples\": [\n          140.02047626138412,\n          121.44082501652863,\n          142.37108385752109\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IMC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.88758649946863,\n        \"min\": -37.978337448919824,\n        \"max\": 43.549592780026806,\n        \"num_unique_values\": 422,\n        \"samples\": [\n          28.033999222799988,\n          26.64172444836973,\n          31.022576631776836\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HistorialFamiliar\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5690291842136773,\n        \"min\": 0.0013067815225991,\n        \"max\": 1.9991154065008767,\n        \"num_unique_values\": 470,\n        \"samples\": [\n          1.1137568863441918,\n          0.783718746376052,\n          1.3878991810203136\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.681218916202937,\n        \"min\": 18.0,\n        \"max\": 89.0,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          34.0,\n          25.0,\n          55.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NivelActividad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3914796364452278,\n        \"min\": 0.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2.0,\n          0.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Colesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 127.02314590285368,\n        \"min\": -263.3531218071088,\n        \"max\": 362.88509019995377,\n        \"num_unique_values\": 423,\n        \"samples\": [\n          226.6870146268669,\n          158.26125351331993,\n          210.63145598436\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HbA1c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.757399384430176,\n        \"min\": 4.012459105600487,\n        \"max\": 9.994296988621867,\n        \"num_unique_values\": 470,\n        \"samples\": [\n          7.771013021417223,\n          7.842284479865446,\n          5.515182337818667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["#Tabular Loa valores Faltantes\n","diabetes.isnull().head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"s2sosy9gs3NZ","executionInfo":{"status":"ok","timestamp":1745080661389,"user_tz":300,"elapsed":17,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"e900c26f-2449-4d06-97f0-dba9b5706e5c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Glucosa  PresionArterial  GrosorPiel  Insulina    IMC  HistorialFamiliar  \\\n","0    False            False       False     False  False               True   \n","1    False            False       False     False  False              False   \n","2    False            False       False     False  False              False   \n","3    False            False       False     False  False              False   \n","4    False            False       False     False  False              False   \n","\n","    Edad  NivelActividad  Colesterol  HbA1c  \n","0  False           False       False  False  \n","1  False           False       False  False  \n","2  False           False       False  False  \n","3  False           False       False  False  \n","4  False           False       False  False  "],"text/html":["\n","  <div id=\"df-e61a1a51-d4eb-4500-942a-ff588487484e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Glucosa</th>\n","      <th>PresionArterial</th>\n","      <th>GrosorPiel</th>\n","      <th>Insulina</th>\n","      <th>IMC</th>\n","      <th>HistorialFamiliar</th>\n","      <th>Edad</th>\n","      <th>NivelActividad</th>\n","      <th>Colesterol</th>\n","      <th>HbA1c</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e61a1a51-d4eb-4500-942a-ff588487484e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e61a1a51-d4eb-4500-942a-ff588487484e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e61a1a51-d4eb-4500-942a-ff588487484e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-44674a26-6469-4775-a098-79a754f241ff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-44674a26-6469-4775-a098-79a754f241ff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-44674a26-6469-4775-a098-79a754f241ff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"diabetes\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Glucosa\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PresionArterial\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GrosorPiel\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulina\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IMC\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HistorialFamiliar\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Edad\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NivelActividad\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Colesterol\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HbA1c\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["# Contar todos los valores nulos\n","valores_Nulos = diabetes.isnull().sum().sum()\n","valores_Nulos"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DntwlfKR1Aa8","executionInfo":{"status":"ok","timestamp":1745080668312,"user_tz":300,"elapsed":32,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"3ad37b23-bc3a-4302-a848-123679e88fa6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(300)"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["# Contar los valores no nulos\n","valores_no_Nulos = diabetes.notnull().sum().sum()\n","valores_no_Nulos\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_fydRjLR3PAQ","executionInfo":{"status":"ok","timestamp":1745079491044,"user_tz":300,"elapsed":20,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"434d384f-ec6f-4848-cc69-2a9f34319492"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(4700)"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["# cual es el porcentaje de los valores nulos en el conjunto de datos\n","\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","\n","porcentaje = (valores_Nulos / (valores_no_Nulos + valores_Nulos)) * 100\n","print(f\"El porcentaje de datos nulos es: {porcentaje:.2f}%\")\n","\n","labels = ['Datos Nulos', 'Datos No Nulos']\n","sizes = [valores_Nulos, valores_no_Nulos]\n","colors = ['red', 'green']\n","explode = (0.1, 0)\n","plt.figure(figsize=(8, 6))\n","plt.pie(sizes, explode=explode, labels=labels, colors=colors,\n","        autopct='%1.1f%%', shadow=True, startangle=140)\n","\n","plt.axis('equal')\n","plt.title('Porcentaje de Datos Nulos y No Nulos')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":538},"id":"z056Kx9kZrE7","executionInfo":{"status":"ok","timestamp":1745079493242,"user_tz":300,"elapsed":211,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"f230efbe-eacf-4bd6-e370-6199586ae652"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["El porcentaje de datos nulos es: 6.00%\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Calcular el total de valores nulos por variable\n","valores_faltantes = diabetes.isnull().sum()\n","\n","# Calcular el porcentaje de valores nulos\n","porcentaje_nulos = (valores_faltantes / len(diabetes)) * 100\n","\n","# Mostrar el resultado\n","print(porcentaje_nulos)\n","\n","porcentaje_nulos.plot(kind='bar', figsize=(10, 6))\n","plt.title('Porcentaje de Valores Faltantes por Variable')\n","plt.xlabel('Variables')\n","plt.ylabel('Porcentaje de Valores Faltantes')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":853},"id":"xrpLIgRacxAu","executionInfo":{"status":"ok","timestamp":1745079500429,"user_tz":300,"elapsed":194,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"38df2ba7-50f3-4362-f68e-a895ff9c37fb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Glucosa              6.0\n","PresionArterial      6.0\n","GrosorPiel           6.0\n","Insulina             6.0\n","IMC                  6.0\n","HistorialFamiliar    6.0\n","Edad                 6.0\n","NivelActividad       6.0\n","Colesterol           6.0\n","HbA1c                6.0\n","dtype: float64\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# detectar valores faltantes no comunes:\n","import pandas as pd\n","\n","datosNulos = (\n","    \"missing\", \"NA\", \"N A\", \"N/A\", \"#N/A\", \"NA \", \" NA\", \"N /A\", \"N / A\",\n","    \" N / A\", \"N / A \", \"na\", \"n a\", \"n/a\", \"na \", \" na\", \"n /a\", \"n / a\",\n","    \" a / a\", \"n / a \", \"NULL\", \"null\", \"\", \"?\", \"*\", \".\",\"NaN\"\n",")\n","url = '/content/diabetes_sintetico.csv'\n","diabetes = pd.read_csv(url,na_values=datosNulos)\n"],"metadata":{"id":"xEUNHiOVjl0l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["promedio = diabetes.mean()\n","promedio"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"id":"g6FfakBsLMWi","executionInfo":{"status":"ok","timestamp":1745085154636,"user_tz":300,"elapsed":17,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"beeb90ec-b6c2-41a5-d4c2-b2d4b3f0424e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Glucosa               87.383193\n","PresionArterial       57.001605\n","GrosorPiel            26.121433\n","Insulina              72.774327\n","IMC                   19.857476\n","HistorialFamiliar      0.980868\n","Edad                  54.238298\n","NivelActividad         2.063830\n","Colesterol           126.386198\n","HbA1c                  6.938591\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Glucosa</th>\n","      <td>87.383193</td>\n","    </tr>\n","    <tr>\n","      <th>PresionArterial</th>\n","      <td>57.001605</td>\n","    </tr>\n","    <tr>\n","      <th>GrosorPiel</th>\n","      <td>26.121433</td>\n","    </tr>\n","    <tr>\n","      <th>Insulina</th>\n","      <td>72.774327</td>\n","    </tr>\n","    <tr>\n","      <th>IMC</th>\n","      <td>19.857476</td>\n","    </tr>\n","    <tr>\n","      <th>HistorialFamiliar</th>\n","      <td>0.980868</td>\n","    </tr>\n","    <tr>\n","      <th>Edad</th>\n","      <td>54.238298</td>\n","    </tr>\n","    <tr>\n","      <th>NivelActividad</th>\n","      <td>2.063830</td>\n","    </tr>\n","    <tr>\n","      <th>Colesterol</th>\n","      <td>126.386198</td>\n","    </tr>\n","    <tr>\n","      <th>HbA1c</th>\n","      <td>6.938591</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["#Remplazar los valores nulos por el promedio\n","\n","diabetes.fillna(promedio,inplace=True)\n","diabetes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"fZJ9KdzP2DO0","executionInfo":{"status":"ok","timestamp":1745085157499,"user_tz":300,"elapsed":54,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"759f45b7-bb46-444e-cf8a-09c0f1abc255"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Glucosa  PresionArterial  GrosorPiel    Insulina        IMC  \\\n","0    134.901425       -93.892663   38.993554  138.918054  24.624109   \n","1    115.852071         0.000000   34.246337   72.440714   0.000000   \n","2    139.430656       -59.021486   25.596304   59.090056  24.037900   \n","3   -165.690896        88.444539   18.530632   99.831277  26.460192   \n","4    112.975399       -70.240361   31.982233   91.490769  18.531927   \n","..          ...              ...         ...         ...        ...   \n","495  136.167301        75.783496   45.060929  153.507512  19.857476   \n","496   88.882615      -106.965298   45.615036   98.673937  26.605185   \n","497 -114.289840        57.001605   37.083662   55.906267  26.601199   \n","498   93.731452         0.000000   35.240625    0.000000  31.951859   \n","499    0.000000        88.588742   30.925269   62.754868  29.700256   \n","\n","     HistorialFamiliar  Edad  NivelActividad  Colesterol     HbA1c  \n","0             0.980868  59.0             1.0  103.275993  7.091831  \n","1             1.370269  79.0             2.0  221.938107  4.614203  \n","2             0.220864  28.0             4.0  138.632550  8.510625  \n","3             0.578375  60.0             2.0    0.000000  9.437401  \n","4             0.619614  34.0             2.0  160.826948  8.460611  \n","..                 ...   ...             ...         ...       ...  \n","495           0.223186  73.0             0.0  170.065744  7.084140  \n","496           1.216639  50.0             1.0  189.153011  7.634522  \n","497           0.562100  62.0             4.0 -116.544997  7.791281  \n","498           0.346992  53.0             2.0  126.817706  7.162301  \n","499           0.759503  37.0             2.0  145.275856  7.495203  \n","\n","[500 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-a066ab7e-2e95-45e7-ae31-81ec9342f1fc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Glucosa</th>\n","      <th>PresionArterial</th>\n","      <th>GrosorPiel</th>\n","      <th>Insulina</th>\n","      <th>IMC</th>\n","      <th>HistorialFamiliar</th>\n","      <th>Edad</th>\n","      <th>NivelActividad</th>\n","      <th>Colesterol</th>\n","      <th>HbA1c</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>134.901425</td>\n","      <td>-93.892663</td>\n","      <td>38.993554</td>\n","      <td>138.918054</td>\n","      <td>24.624109</td>\n","      <td>0.980868</td>\n","      <td>59.0</td>\n","      <td>1.0</td>\n","      <td>103.275993</td>\n","      <td>7.091831</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>115.852071</td>\n","      <td>0.000000</td>\n","      <td>34.246337</td>\n","      <td>72.440714</td>\n","      <td>0.000000</td>\n","      <td>1.370269</td>\n","      <td>79.0</td>\n","      <td>2.0</td>\n","      <td>221.938107</td>\n","      <td>4.614203</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>139.430656</td>\n","      <td>-59.021486</td>\n","      <td>25.596304</td>\n","      <td>59.090056</td>\n","      <td>24.037900</td>\n","      <td>0.220864</td>\n","      <td>28.0</td>\n","      <td>4.0</td>\n","      <td>138.632550</td>\n","      <td>8.510625</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-165.690896</td>\n","      <td>88.444539</td>\n","      <td>18.530632</td>\n","      <td>99.831277</td>\n","      <td>26.460192</td>\n","      <td>0.578375</td>\n","      <td>60.0</td>\n","      <td>2.0</td>\n","      <td>0.000000</td>\n","      <td>9.437401</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>112.975399</td>\n","      <td>-70.240361</td>\n","      <td>31.982233</td>\n","      <td>91.490769</td>\n","      <td>18.531927</td>\n","      <td>0.619614</td>\n","      <td>34.0</td>\n","      <td>2.0</td>\n","      <td>160.826948</td>\n","      <td>8.460611</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>136.167301</td>\n","      <td>75.783496</td>\n","      <td>45.060929</td>\n","      <td>153.507512</td>\n","      <td>19.857476</td>\n","      <td>0.223186</td>\n","      <td>73.0</td>\n","      <td>0.0</td>\n","      <td>170.065744</td>\n","      <td>7.084140</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>88.882615</td>\n","      <td>-106.965298</td>\n","      <td>45.615036</td>\n","      <td>98.673937</td>\n","      <td>26.605185</td>\n","      <td>1.216639</td>\n","      <td>50.0</td>\n","      <td>1.0</td>\n","      <td>189.153011</td>\n","      <td>7.634522</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>-114.289840</td>\n","      <td>57.001605</td>\n","      <td>37.083662</td>\n","      <td>55.906267</td>\n","      <td>26.601199</td>\n","      <td>0.562100</td>\n","      <td>62.0</td>\n","      <td>4.0</td>\n","      <td>-116.544997</td>\n","      <td>7.791281</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>93.731452</td>\n","      <td>0.000000</td>\n","      <td>35.240625</td>\n","      <td>0.000000</td>\n","      <td>31.951859</td>\n","      <td>0.346992</td>\n","      <td>53.0</td>\n","      <td>2.0</td>\n","      <td>126.817706</td>\n","      <td>7.162301</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>0.000000</td>\n","      <td>88.588742</td>\n","      <td>30.925269</td>\n","      <td>62.754868</td>\n","      <td>29.700256</td>\n","      <td>0.759503</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>145.275856</td>\n","      <td>7.495203</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a066ab7e-2e95-45e7-ae31-81ec9342f1fc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a066ab7e-2e95-45e7-ae31-81ec9342f1fc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a066ab7e-2e95-45e7-ae31-81ec9342f1fc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b0623f1a-bc31-411d-97d5-94ee4dce69ad\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b0623f1a-bc31-411d-97d5-94ee4dce69ad')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b0623f1a-bc31-411d-97d5-94ee4dce69ad button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5d1d7aef-2aa9-449b-943c-4b243623d145\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('diabetes')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5d1d7aef-2aa9-449b-943c-4b243623d145 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('diabetes');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"diabetes","summary":"{\n  \"name\": \"diabetes\",\n  \"rows\": 500,\n  \"fields\": [\n    {\n      \"column\": \"Glucosa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 76.11975331601674,\n        \"min\": -176.9037894796184,\n        \"max\": 235.58194471964163,\n        \"num_unique_values\": 425,\n        \"samples\": [\n          146.4491927084835,\n          104.10719388698884,\n          136.82353579104702\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PresionArterial\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51.23726674862046,\n        \"min\": -108.151937188371,\n        \"max\": 118.40126807403192,\n        \"num_unique_values\": 423,\n        \"samples\": [\n          58.88732457923268,\n          -68.48303652343807,\n          71.82621369786575\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GrosorPiel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.845795673444927,\n        \"min\": -3.9625537819368937,\n        \"max\": 51.01683114180395,\n        \"num_unique_values\": 471,\n        \"samples\": [\n          21.29385667913894,\n          40.00759790634311,\n          20.16813537700626\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulina\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 77.24770193400833,\n        \"min\": -195.0595342876504,\n        \"max\": 259.65537839224305,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          140.02047626138412,\n          -103.08399249239858,\n          -8.633477300701813\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IMC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.341549322181375,\n        \"min\": -37.978337448919824,\n        \"max\": 43.549592780026806,\n        \"num_unique_values\": 423,\n        \"samples\": [\n          38.1180310961482,\n          25.369825786662098,\n          21.74796133015141\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HistorialFamiliar\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5516589766928734,\n        \"min\": 0.0013067815225991,\n        \"max\": 1.9991154065008767,\n        \"num_unique_values\": 471,\n        \"samples\": [\n          1.232600971851448,\n          0.4125042276723052,\n          0.3585065114785615\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.049903204594848,\n        \"min\": 18.0,\n        \"max\": 89.0,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          34.0,\n          25.0,\n          36.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NivelActividad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3490032736916602,\n        \"min\": 0.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1.0,\n          2.0,\n          2.0638297872340425\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Colesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 123.14563229636455,\n        \"min\": -263.3531218071088,\n        \"max\": 362.88509019995377,\n        \"num_unique_values\": 424,\n        \"samples\": [\n          137.93344190955116,\n          110.12513380403678,\n          177.5201618987627\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HbA1c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.703752940888499,\n        \"min\": 4.012459105600487,\n        \"max\": 9.994296988621867,\n        \"num_unique_values\": 471,\n        \"samples\": [\n          6.571865675251191,\n          7.773237381929053,\n          6.701660862649544\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["diabetes.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"id":"cIJl0yWq6Je-","executionInfo":{"status":"ok","timestamp":1745085169056,"user_tz":300,"elapsed":18,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"9df8e0a2-581a-49c1-fc66-69fa987b96e5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Glucosa              0\n","PresionArterial      0\n","GrosorPiel           0\n","Insulina             0\n","IMC                  0\n","HistorialFamiliar    0\n","Edad                 0\n","NivelActividad       0\n","Colesterol           0\n","HbA1c                0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Glucosa</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>PresionArterial</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>GrosorPiel</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Insulina</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>IMC</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>HistorialFamiliar</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Edad</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>NivelActividad</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Colesterol</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>HbA1c</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["# encontrar cuantos valores negativos tengo en el conjunto de datos\n","\n","negativos = (diabetes <= 0).sum()\n","print(negativos)\n","\n","negativos.plot(kind='bar', figsize=(10, 6))\n","plt.title('Valores Negativos por Variable')\n","plt.xlabel('Variables')\n","plt.ylabel('Cantidad de Valores Negativos')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":853},"id":"tZSOhEYFfIqn","executionInfo":{"status":"ok","timestamp":1745080712289,"user_tz":300,"elapsed":181,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"935bc0ba-33eb-4753-91fc-d5fe35621868"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Glucosa              120\n","PresionArterial      124\n","GrosorPiel            33\n","Insulina             131\n","IMC                  122\n","HistorialFamiliar     30\n","Edad                  30\n","NivelActividad       118\n","Colesterol           125\n","HbA1c                 30\n","dtype: int64\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#remplazamos los valores negartivos por un 0\n","diabetes= diabetes.applymap(lambda x: 0 if x < 0 else x)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u0VoJK2luey_","executionInfo":{"status":"ok","timestamp":1745080742726,"user_tz":300,"elapsed":12,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"2f37a87d-2fda-42ce-a10e-ad02e7d3ce6e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-73-f670fc09502a>:2: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.\n","  diabetes= diabetes.applymap(lambda x: 0 if x < 0 else x)\n"]}]},{"cell_type":"code","source":["diabetes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"xZDGQfSt6xZ-","executionInfo":{"status":"ok","timestamp":1745080763261,"user_tz":300,"elapsed":136,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"b40d3eaf-48a6-4b77-ba3b-0191f001ec62"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Glucosa  PresionArterial  GrosorPiel    Insulina        IMC  \\\n","0    134.901425         0.000000   38.993554  138.918054  24.624109   \n","1    115.852071         0.000000   34.246337   72.440714   0.000000   \n","2    139.430656         0.000000   25.596304   59.090056  24.037900   \n","3      0.000000        88.444539   18.530632   99.831277  26.460192   \n","4    112.975399         0.000000   31.982233   91.490769  18.531927   \n","..          ...              ...         ...         ...        ...   \n","495  136.167301        75.783496   45.060929  153.507512   0.000000   \n","496   88.882615         0.000000   45.615036   98.673937  26.605185   \n","497    0.000000         0.000000   37.083662   55.906267  26.601199   \n","498   93.731452         0.000000   35.240625    0.000000  31.951859   \n","499    0.000000        88.588742   30.925269   62.754868  29.700256   \n","\n","     HistorialFamiliar  Edad  NivelActividad  Colesterol     HbA1c  \n","0             0.000000  59.0             1.0  103.275993  7.091831  \n","1             1.370269  79.0             2.0  221.938107  4.614203  \n","2             0.220864  28.0             4.0  138.632550  8.510625  \n","3             0.578375  60.0             2.0    0.000000  9.437401  \n","4             0.619614  34.0             2.0  160.826948  8.460611  \n","..                 ...   ...             ...         ...       ...  \n","495           0.223186  73.0             0.0  170.065744  7.084140  \n","496           1.216639  50.0             1.0  189.153011  7.634522  \n","497           0.562100  62.0             4.0    0.000000  7.791281  \n","498           0.346992  53.0             2.0  126.817706  7.162301  \n","499           0.759503  37.0             2.0  145.275856  7.495203  \n","\n","[500 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-e2907628-a0dd-44c9-8a12-7eb28d5c561d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Glucosa</th>\n","      <th>PresionArterial</th>\n","      <th>GrosorPiel</th>\n","      <th>Insulina</th>\n","      <th>IMC</th>\n","      <th>HistorialFamiliar</th>\n","      <th>Edad</th>\n","      <th>NivelActividad</th>\n","      <th>Colesterol</th>\n","      <th>HbA1c</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>134.901425</td>\n","      <td>0.000000</td>\n","      <td>38.993554</td>\n","      <td>138.918054</td>\n","      <td>24.624109</td>\n","      <td>0.000000</td>\n","      <td>59.0</td>\n","      <td>1.0</td>\n","      <td>103.275993</td>\n","      <td>7.091831</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>115.852071</td>\n","      <td>0.000000</td>\n","      <td>34.246337</td>\n","      <td>72.440714</td>\n","      <td>0.000000</td>\n","      <td>1.370269</td>\n","      <td>79.0</td>\n","      <td>2.0</td>\n","      <td>221.938107</td>\n","      <td>4.614203</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>139.430656</td>\n","      <td>0.000000</td>\n","      <td>25.596304</td>\n","      <td>59.090056</td>\n","      <td>24.037900</td>\n","      <td>0.220864</td>\n","      <td>28.0</td>\n","      <td>4.0</td>\n","      <td>138.632550</td>\n","      <td>8.510625</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.000000</td>\n","      <td>88.444539</td>\n","      <td>18.530632</td>\n","      <td>99.831277</td>\n","      <td>26.460192</td>\n","      <td>0.578375</td>\n","      <td>60.0</td>\n","      <td>2.0</td>\n","      <td>0.000000</td>\n","      <td>9.437401</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>112.975399</td>\n","      <td>0.000000</td>\n","      <td>31.982233</td>\n","      <td>91.490769</td>\n","      <td>18.531927</td>\n","      <td>0.619614</td>\n","      <td>34.0</td>\n","      <td>2.0</td>\n","      <td>160.826948</td>\n","      <td>8.460611</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>136.167301</td>\n","      <td>75.783496</td>\n","      <td>45.060929</td>\n","      <td>153.507512</td>\n","      <td>0.000000</td>\n","      <td>0.223186</td>\n","      <td>73.0</td>\n","      <td>0.0</td>\n","      <td>170.065744</td>\n","      <td>7.084140</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>88.882615</td>\n","      <td>0.000000</td>\n","      <td>45.615036</td>\n","      <td>98.673937</td>\n","      <td>26.605185</td>\n","      <td>1.216639</td>\n","      <td>50.0</td>\n","      <td>1.0</td>\n","      <td>189.153011</td>\n","      <td>7.634522</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>37.083662</td>\n","      <td>55.906267</td>\n","      <td>26.601199</td>\n","      <td>0.562100</td>\n","      <td>62.0</td>\n","      <td>4.0</td>\n","      <td>0.000000</td>\n","      <td>7.791281</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>93.731452</td>\n","      <td>0.000000</td>\n","      <td>35.240625</td>\n","      <td>0.000000</td>\n","      <td>31.951859</td>\n","      <td>0.346992</td>\n","      <td>53.0</td>\n","      <td>2.0</td>\n","      <td>126.817706</td>\n","      <td>7.162301</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>0.000000</td>\n","      <td>88.588742</td>\n","      <td>30.925269</td>\n","      <td>62.754868</td>\n","      <td>29.700256</td>\n","      <td>0.759503</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>145.275856</td>\n","      <td>7.495203</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2907628-a0dd-44c9-8a12-7eb28d5c561d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e2907628-a0dd-44c9-8a12-7eb28d5c561d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e2907628-a0dd-44c9-8a12-7eb28d5c561d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-62c4f3d6-ce48-4bf4-bf43-196bdcb0808e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-62c4f3d6-ce48-4bf4-bf43-196bdcb0808e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-62c4f3d6-ce48-4bf4-bf43-196bdcb0808e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_28a80d2f-41a8-47b7-b0af-ed6c1f1530fd\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('diabetes')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_28a80d2f-41a8-47b7-b0af-ed6c1f1530fd button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('diabetes');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"diabetes","summary":"{\n  \"name\": \"diabetes\",\n  \"rows\": 500,\n  \"fields\": [\n    {\n      \"column\": \"Glucosa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57.8814069917105,\n        \"min\": 0.0,\n        \"max\": 235.58194471964163,\n        \"num_unique_values\": 381,\n        \"samples\": [\n          95.33338813300703,\n          105.75164066517132,\n          110.72362872446357\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PresionArterial\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 36.96027089845748,\n        \"min\": 0.0,\n        \"max\": 118.40126807403192,\n        \"num_unique_values\": 377,\n        \"samples\": [\n          106.9183679527668,\n          79.2580443552135,\n          82.49678312319584\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GrosorPiel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.616097690196968,\n        \"min\": 0.0,\n        \"max\": 51.01683114180395,\n        \"num_unique_values\": 468,\n        \"samples\": [\n          21.29385667913894,\n          20.32298798688109,\n          20.16813537700626\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulina\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 61.2691817807196,\n        \"min\": 0.0,\n        \"max\": 259.65537839224305,\n        \"num_unique_values\": 370,\n        \"samples\": [\n          97.43031382057568,\n          98.6242547474682,\n          93.91262458083582\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IMC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.678978130401548,\n        \"min\": 0.0,\n        \"max\": 43.549592780026806,\n        \"num_unique_values\": 379,\n        \"samples\": [\n          33.17624667361876,\n          27.756738242147744,\n          32.13023585720753\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HistorialFamiliar\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5989147886983209,\n        \"min\": 0.0,\n        \"max\": 1.9991154065008767,\n        \"num_unique_values\": 471,\n        \"samples\": [\n          1.232600971851448,\n          0.4125042276723052,\n          0.3585065114785615\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.837957976323427,\n        \"min\": 0.0,\n        \"max\": 89.0,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          34.0,\n          25.0,\n          36.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NivelActividad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.435451511575425,\n        \"min\": 0.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2.0,\n          0.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Colesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 89.91891936320317,\n        \"min\": 0.0,\n        \"max\": 362.88509019995377,\n        \"num_unique_values\": 376,\n        \"samples\": [\n          128.85272398832524,\n          137.8814597136328,\n          247.17451040920315\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HbA1c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.371400345961013,\n        \"min\": 0.0,\n        \"max\": 9.994296988621867,\n        \"num_unique_values\": 471,\n        \"samples\": [\n          6.571865675251191,\n          7.773237381929053,\n          6.701660862649544\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["\n","negativos = (diabetes < 0).sum()\n","print(negativos)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i9gXm5H0vlWs","executionInfo":{"status":"ok","timestamp":1745080773260,"user_tz":300,"elapsed":52,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"64c3e6b3-135d-4a38-de1f-4e650dd63ae1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Glucosa              0\n","PresionArterial      0\n","GrosorPiel           0\n","Insulina             0\n","IMC                  0\n","HistorialFamiliar    0\n","Edad                 0\n","NivelActividad       0\n","Colesterol           0\n","HbA1c                0\n","dtype: int64\n"]}]},{"cell_type":"markdown","source":["# **NPUTACION DE DATOS FALTANTES**\n","\n","**La imputación de datos faltantes es una técnica utilizada en el análisis de datos para rellenar o estimar los valores que están ausentes en un conjunto de datos.**\n","\n"],"metadata":{"id":"XMMM3A6K7kDI"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import os\n","\n","datosNulos = (\n","    \"missing\", \"NA\", \"N A\", \"N/A\", \"#N/A\", \"NA \", \" NA\", \"N /A\", \"N / A\",\n","    \" N / A\", \"N / A \", \"na\", \"n a\", \"n/a\", \"na \", \" na\", \"n /a\", \"n / a\",\n","    \" a / a\", \"n / a \", \"NULL\", \"null\", \"\", \"?\", \"*\", \".\",\"NaN\"\n",")\n","\n","ruta= '/content/data.csv'\n","dataframe = pd.read_csv(ruta,na_values=datosNulos)"],"metadata":{"id":"w2VfKFKa76-I","executionInfo":{"status":"ok","timestamp":1745508662000,"user_tz":300,"elapsed":10,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["#asignar un valor faltante\n","dataframe.at[1, 'Name'] = \"?\"\n","dataframe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":805},"id":"ffLQZZHOVOvY","executionInfo":{"status":"ok","timestamp":1745506059573,"user_tz":300,"elapsed":127,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"2d85faff-e29a-461c-c3b6-dae35a984d6f"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Name                                            Address  \\\n","0         John Brown          9640 Parker Street\\nSancheztown, DC 61292   \n","1                  ?  61611 Davis Stravenue Suite 353\\nNorth Stephan...   \n","2    Mr. Kevin Jones          0912 Kevin Ways\\nEast Jamestown, WA 30790   \n","3        Sharon Ford  1669 Nicole Stream Apt. 523\\nKarenshire, OK 22012   \n","4        Sylvia Cruz   4672 John Tunnel Apt. 454\\nAnthonyberg, ND 96286   \n","..               ...                                                ...   \n","995              NaN                                                NaN   \n","996    Steven Miller          69463 Roman Flat\\nBarronchester, NM 35634   \n","997        Mary Rice  085 Margaret Street\\nWest Angelachester, AZ 75391   \n","998      Dana Cortez      12200 Phillip Union\\nChristinamouth, MI 06635   \n","999   Andrew Farrell      94239 Williams Station\\nGibsonville, PW 64900   \n","\n","                            Email            Phone Number  \\\n","0             kmathis@example.net       (678)423-0991x618   \n","1         ronaldgrant@example.org  001-763-433-4746x34475   \n","2     charlottecarter@example.com        412.345.7624x374   \n","3    jeffreyblackwell@example.net      888-600-8421x48259   \n","4           pgonzalez@example.com              2673831435   \n","..                            ...                     ...   \n","995                           NaN                     NaN   \n","996      maxwellchase@example.com    +1-905-565-3828x1439   \n","997      tannerdaniel@example.org            628.255.6047   \n","998          steven45@example.org      (813)781-5304x3871   \n","999       phillipdiaz@example.org   +1-949-813-9291x21445   \n","\n","                                   Job                     Company  \\\n","0             Doctor, general practice             Robertson-Davis   \n","1                      Mining engineer             Turner-Sandoval   \n","2    Sales promotion account executive   Thomas, Graham and Haynes   \n","3               Psychotherapist, child                 Huber-Perez   \n","4                                 Make               Hernandez Inc   \n","..                                 ...                         ...   \n","995                                NaN                         NaN   \n","996                         Air broker                 Shannon Ltd   \n","997                    Quality manager  Edwards, Kim and Velazquez   \n","998                 Production manager    Jordan, Taylor and Ortiz   \n","999                   Sports therapist       King, Leonard and Ali   \n","\n","    Date of Birth  Credit Card Number          SSN    Salary  \n","0      1978-10-12        5.252139e+15  309-04-1231  108329.0  \n","1      2002-05-27        4.724725e+15  321-21-0035  132143.0  \n","2      1977-03-13        3.053106e+13  804-09-5265   89179.0  \n","3      1996-03-16        2.712989e+15  362-59-8086   68621.0  \n","4      1997-04-26        3.701233e+14  077-14-5830  135509.0  \n","..            ...                 ...          ...       ...  \n","995           NaN                 NaN          NaN       NaN  \n","996    1982-08-27        3.525254e+15  290-47-9767  123622.0  \n","997    1999-05-05        4.986113e+12  869-81-3503   93064.0  \n","998    2000-01-05        4.430732e+12  372-10-9381   59678.0  \n","999    1980-06-11        4.150565e+18  848-85-7623  142407.0  \n","\n","[1000 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-2b40a408-9028-44bb-95a4-7ac4ea714deb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>Email</th>\n","      <th>Phone Number</th>\n","      <th>Job</th>\n","      <th>Company</th>\n","      <th>Date of Birth</th>\n","      <th>Credit Card Number</th>\n","      <th>SSN</th>\n","      <th>Salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>John Brown</td>\n","      <td>9640 Parker Street\\nSancheztown, DC 61292</td>\n","      <td>kmathis@example.net</td>\n","      <td>(678)423-0991x618</td>\n","      <td>Doctor, general practice</td>\n","      <td>Robertson-Davis</td>\n","      <td>1978-10-12</td>\n","      <td>5.252139e+15</td>\n","      <td>309-04-1231</td>\n","      <td>108329.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>?</td>\n","      <td>61611 Davis Stravenue Suite 353\\nNorth Stephan...</td>\n","      <td>ronaldgrant@example.org</td>\n","      <td>001-763-433-4746x34475</td>\n","      <td>Mining engineer</td>\n","      <td>Turner-Sandoval</td>\n","      <td>2002-05-27</td>\n","      <td>4.724725e+15</td>\n","      <td>321-21-0035</td>\n","      <td>132143.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mr. Kevin Jones</td>\n","      <td>0912 Kevin Ways\\nEast Jamestown, WA 30790</td>\n","      <td>charlottecarter@example.com</td>\n","      <td>412.345.7624x374</td>\n","      <td>Sales promotion account executive</td>\n","      <td>Thomas, Graham and Haynes</td>\n","      <td>1977-03-13</td>\n","      <td>3.053106e+13</td>\n","      <td>804-09-5265</td>\n","      <td>89179.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sharon Ford</td>\n","      <td>1669 Nicole Stream Apt. 523\\nKarenshire, OK 22012</td>\n","      <td>jeffreyblackwell@example.net</td>\n","      <td>888-600-8421x48259</td>\n","      <td>Psychotherapist, child</td>\n","      <td>Huber-Perez</td>\n","      <td>1996-03-16</td>\n","      <td>2.712989e+15</td>\n","      <td>362-59-8086</td>\n","      <td>68621.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sylvia Cruz</td>\n","      <td>4672 John Tunnel Apt. 454\\nAnthonyberg, ND 96286</td>\n","      <td>pgonzalez@example.com</td>\n","      <td>2673831435</td>\n","      <td>Make</td>\n","      <td>Hernandez Inc</td>\n","      <td>1997-04-26</td>\n","      <td>3.701233e+14</td>\n","      <td>077-14-5830</td>\n","      <td>135509.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>Steven Miller</td>\n","      <td>69463 Roman Flat\\nBarronchester, NM 35634</td>\n","      <td>maxwellchase@example.com</td>\n","      <td>+1-905-565-3828x1439</td>\n","      <td>Air broker</td>\n","      <td>Shannon Ltd</td>\n","      <td>1982-08-27</td>\n","      <td>3.525254e+15</td>\n","      <td>290-47-9767</td>\n","      <td>123622.0</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>Mary Rice</td>\n","      <td>085 Margaret Street\\nWest Angelachester, AZ 75391</td>\n","      <td>tannerdaniel@example.org</td>\n","      <td>628.255.6047</td>\n","      <td>Quality manager</td>\n","      <td>Edwards, Kim and Velazquez</td>\n","      <td>1999-05-05</td>\n","      <td>4.986113e+12</td>\n","      <td>869-81-3503</td>\n","      <td>93064.0</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>Dana Cortez</td>\n","      <td>12200 Phillip Union\\nChristinamouth, MI 06635</td>\n","      <td>steven45@example.org</td>\n","      <td>(813)781-5304x3871</td>\n","      <td>Production manager</td>\n","      <td>Jordan, Taylor and Ortiz</td>\n","      <td>2000-01-05</td>\n","      <td>4.430732e+12</td>\n","      <td>372-10-9381</td>\n","      <td>59678.0</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>Andrew Farrell</td>\n","      <td>94239 Williams Station\\nGibsonville, PW 64900</td>\n","      <td>phillipdiaz@example.org</td>\n","      <td>+1-949-813-9291x21445</td>\n","      <td>Sports therapist</td>\n","      <td>King, Leonard and Ali</td>\n","      <td>1980-06-11</td>\n","      <td>4.150565e+18</td>\n","      <td>848-85-7623</td>\n","      <td>142407.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b40a408-9028-44bb-95a4-7ac4ea714deb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2b40a408-9028-44bb-95a4-7ac4ea714deb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2b40a408-9028-44bb-95a4-7ac4ea714deb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-467a98c7-9c4e-4b68-8c9a-f41163012272\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-467a98c7-9c4e-4b68-8c9a-f41163012272')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-467a98c7-9c4e-4b68-8c9a-f41163012272 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7efeaa3c-58ff-418a-9d13-31c90f4d0113\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dataframe')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7efeaa3c-58ff-418a-9d13-31c90f4d0113 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dataframe');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataframe","summary":"{\n  \"name\": \"dataframe\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 794,\n        \"samples\": [\n          \"Jacob Butler\",\n          \"Kyle Holder\",\n          \"Christopher Martin\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 800,\n        \"samples\": [\n          \"37711 Jenkins Key\\nRitterview, UT 10897\",\n          \"1263 Henry Union\\nLake Robert, TX 76905\",\n          \"1700 Tanya Harbor Suite 043\\nCooperbury, NJ 69872\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Email\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 799,\n        \"samples\": [\n          \"ajackson@example.org\",\n          \"daviskimberly@example.org\",\n          \"julieburnett@example.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone Number\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 800,\n        \"samples\": [\n          \"863-307-8665x946\",\n          \"(706)943-3664x91806\",\n          \"862-879-4684x5311\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Job\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 450,\n        \"samples\": [\n          \"Scientist, audiological\",\n          \"Development worker, international aid\",\n          \"Teacher, special educational needs\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Company\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 781,\n        \"samples\": [\n          \"Hickman-Williams\",\n          \"Murphy, Mcclure and Wilson\",\n          \"Vasquez PLC\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date of Birth\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 787,\n        \"samples\": [\n          \"1965-07-01\",\n          \"1977-02-04\",\n          \"1982-02-05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit Card Number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2813239654430129e+18,\n        \"min\": 60470475819.0,\n        \"max\": 4.948692717872015e+18,\n        \"num_unique_values\": 800,\n        \"samples\": [\n          3559841467073017.0,\n          3576770629531639.0,\n          3599621934818620.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSN\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 800,\n        \"samples\": [\n          \"772-28-6618\",\n          \"809-10-8645\",\n          \"335-41-1647\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35052.04081514557,\n        \"min\": 30123.0,\n        \"max\": 149736.0,\n        \"num_unique_values\": 798,\n        \"samples\": [\n          146336.0,\n          112774.0,\n          30959.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# comvertimos el valor ? a nulo\n","dataframe.replace('?', np.nan, inplace=True)"],"metadata":{"id":"OSZCYAYKYOV1","executionInfo":{"status":"ok","timestamp":1745506061645,"user_tz":300,"elapsed":10,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["#ordenar el dtf y poner los valores nulos de primero\n","\n","dataOrganizado = dataframe.sort_values(by=list(dataframe.columns),ascending=False, na_position='first' )\n","dataOrganizado\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":649},"id":"f5dmqDRZcEqF","executionInfo":{"status":"ok","timestamp":1745506062948,"user_tz":300,"elapsed":89,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"a0a7713e-6eaa-438c-d309-cdbc886f9d7f"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Name                                            Address  \\\n","15             NaN                                                NaN   \n","16             NaN                                                NaN   \n","23             NaN                                                NaN   \n","24             NaN                                                NaN   \n","26             NaN                                                NaN   \n","..             ...                                                ...   \n","119      Adam Hall  8305 Jesus Trail Suite 117\\nPort Donald, ID 01474   \n","426    Adam Garcia       8742 Mark Throughway\\nPort Richard, IA 77456   \n","529    Aaron Tyler  3828 Brittany Locks Suite 448\\nNew Christopher...   \n","75    Aaron Massey          14903 Garcia Alley\\nHerreraview, SC 20356   \n","347  Aaron Leonard         440 Swanson Drives\\nJessicaburgh, PA 24410   \n","\n","                          Email         Phone Number  \\\n","15                          NaN                  NaN   \n","16                          NaN                  NaN   \n","23                          NaN                  NaN   \n","24                          NaN                  NaN   \n","26                          NaN                  NaN   \n","..                          ...                  ...   \n","119  katherinesmith@example.org        (399)729-3106   \n","426   malonecynthia@example.net  (758)381-4958x09004   \n","529      paulmorris@example.net        (501)340-3955   \n","75   victorialarson@example.net         976-763-2039   \n","347         zthomas@example.net     001-946-481-8151   \n","\n","                                     Job                    Company  \\\n","15                                   NaN                        NaN   \n","16                                   NaN                        NaN   \n","23                                   NaN                        NaN   \n","24                                   NaN                        NaN   \n","26                                   NaN                        NaN   \n","..                                   ...                        ...   \n","119  Designer, blown glass/stained glass            Fowler and Sons   \n","426                              Barista    Browning, Kent and Neal   \n","529            Education officer, museum             Hawkins-Willis   \n","75   Social research officer, government          Patterson-Wheeler   \n","347               Programmer, multimedia  Barton, White and Johnson   \n","\n","    Date of Birth  Credit Card Number          SSN    Salary  \n","15            NaN                 NaN          NaN       NaN  \n","16            NaN                 NaN          NaN       NaN  \n","23            NaN                 NaN          NaN       NaN  \n","24            NaN                 NaN          NaN       NaN  \n","26            NaN                 NaN          NaN       NaN  \n","..            ...                 ...          ...       ...  \n","119    1991-05-28        3.544291e+15  458-12-2247   62491.0  \n","426    1997-08-20        3.798206e+14  304-48-3268   88526.0  \n","529    1960-08-27        3.528755e+15  278-78-4851  119887.0  \n","75     2002-10-08        3.044065e+13  580-29-0591  104645.0  \n","347    1980-10-29        3.724138e+14  575-01-5747   66507.0  \n","\n","[1000 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-e3389a7b-3a97-4ccb-b369-32436ed8f22f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>Email</th>\n","      <th>Phone Number</th>\n","      <th>Job</th>\n","      <th>Company</th>\n","      <th>Date of Birth</th>\n","      <th>Credit Card Number</th>\n","      <th>SSN</th>\n","      <th>Salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>15</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>119</th>\n","      <td>Adam Hall</td>\n","      <td>8305 Jesus Trail Suite 117\\nPort Donald, ID 01474</td>\n","      <td>katherinesmith@example.org</td>\n","      <td>(399)729-3106</td>\n","      <td>Designer, blown glass/stained glass</td>\n","      <td>Fowler and Sons</td>\n","      <td>1991-05-28</td>\n","      <td>3.544291e+15</td>\n","      <td>458-12-2247</td>\n","      <td>62491.0</td>\n","    </tr>\n","    <tr>\n","      <th>426</th>\n","      <td>Adam Garcia</td>\n","      <td>8742 Mark Throughway\\nPort Richard, IA 77456</td>\n","      <td>malonecynthia@example.net</td>\n","      <td>(758)381-4958x09004</td>\n","      <td>Barista</td>\n","      <td>Browning, Kent and Neal</td>\n","      <td>1997-08-20</td>\n","      <td>3.798206e+14</td>\n","      <td>304-48-3268</td>\n","      <td>88526.0</td>\n","    </tr>\n","    <tr>\n","      <th>529</th>\n","      <td>Aaron Tyler</td>\n","      <td>3828 Brittany Locks Suite 448\\nNew Christopher...</td>\n","      <td>paulmorris@example.net</td>\n","      <td>(501)340-3955</td>\n","      <td>Education officer, museum</td>\n","      <td>Hawkins-Willis</td>\n","      <td>1960-08-27</td>\n","      <td>3.528755e+15</td>\n","      <td>278-78-4851</td>\n","      <td>119887.0</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>Aaron Massey</td>\n","      <td>14903 Garcia Alley\\nHerreraview, SC 20356</td>\n","      <td>victorialarson@example.net</td>\n","      <td>976-763-2039</td>\n","      <td>Social research officer, government</td>\n","      <td>Patterson-Wheeler</td>\n","      <td>2002-10-08</td>\n","      <td>3.044065e+13</td>\n","      <td>580-29-0591</td>\n","      <td>104645.0</td>\n","    </tr>\n","    <tr>\n","      <th>347</th>\n","      <td>Aaron Leonard</td>\n","      <td>440 Swanson Drives\\nJessicaburgh, PA 24410</td>\n","      <td>zthomas@example.net</td>\n","      <td>001-946-481-8151</td>\n","      <td>Programmer, multimedia</td>\n","      <td>Barton, White and Johnson</td>\n","      <td>1980-10-29</td>\n","      <td>3.724138e+14</td>\n","      <td>575-01-5747</td>\n","      <td>66507.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3389a7b-3a97-4ccb-b369-32436ed8f22f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e3389a7b-3a97-4ccb-b369-32436ed8f22f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e3389a7b-3a97-4ccb-b369-32436ed8f22f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fc1e5c0e-6e88-4e42-adf0-7822e1184e21\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc1e5c0e-6e88-4e42-adf0-7822e1184e21')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fc1e5c0e-6e88-4e42-adf0-7822e1184e21 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_18491556-f69a-4695-ace1-80afb9d9c9ea\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dataOrganizado')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_18491556-f69a-4695-ace1-80afb9d9c9ea button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dataOrganizado');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataOrganizado","summary":"{\n  \"name\": \"dataOrganizado\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 793,\n        \"samples\": [\n          \"Samantha Case\",\n          \"Nicole Jones\",\n          \"Angelica Lee\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 800,\n        \"samples\": [\n          \"68821 Wiley Rapids\\nDavidsontown, MN 02846\",\n          \"127 Jones Roads Suite 108\\nMoralesport, VT 18214\",\n          \"40814 Fox Square Suite 494\\nMichelehaven, OK 26915\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Email\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 799,\n        \"samples\": [\n          \"garciabenjamin@example.com\",\n          \"pbyrd@example.org\",\n          \"daltonjennifer@example.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone Number\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 800,\n        \"samples\": [\n          \"9222807205\",\n          \"808.666.5810\",\n          \"(668)865-0093\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Job\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 450,\n        \"samples\": [\n          \"Health and safety inspector\",\n          \"Psychologist, educational\",\n          \"Plant breeder/geneticist\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Company\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 781,\n        \"samples\": [\n          \"Brown, Adams and Coleman\",\n          \"West Inc\",\n          \"Lam-Thompson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date of Birth\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 787,\n        \"samples\": [\n          \"1986-03-04\",\n          \"2001-06-06\",\n          \"1983-05-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit Card Number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2813239654430124e+18,\n        \"min\": 60470475819.0,\n        \"max\": 4.948692717872015e+18,\n        \"num_unique_values\": 800,\n        \"samples\": [\n          639059594080.0,\n          6011801624327057.0,\n          180089464594840.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSN\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 800,\n        \"samples\": [\n          \"688-67-9486\",\n          \"782-94-0034\",\n          \"001-66-2877\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35052.04081514559,\n        \"min\": 30123.0,\n        \"max\": 149736.0,\n        \"num_unique_values\": 798,\n        \"samples\": [\n          81698.0,\n          144654.0,\n          127341.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# visualzar datos faltantes\n","datosnulos = dataOrganizado.isnull().sum()\n","datosnulos.plot(kind='bar', figsize=(10, 6))\n","plt.title('datos nulos por Variable')\n","plt.xlabel('Variables')\n","plt.ylabel('Cantidad de Valores nulos')\n","plt.show()\n","\n"],"metadata":{"id":"kHWkx_qyDYNf","colab":{"base_uri":"https://localhost:8080/","height":689},"executionInfo":{"status":"ok","timestamp":1745506064886,"user_tz":300,"elapsed":386,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"1f781f9c-38db-4c25-f3f7-60dc9a855141"},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#extraer todas las columnas categoricas\n","categoricas = dataOrganizado.select_dtypes(include=[object,'category']).columns\n","categoricas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xaWNRVnD2Dfx","executionInfo":{"status":"ok","timestamp":1745506066779,"user_tz":300,"elapsed":25,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"03f9e708-c85b-4df6-a732-88ede04d9d7f"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Name', 'Address', 'Email', 'Phone Number', 'Job', 'Company',\n","       'Date of Birth', 'SSN'],\n","      dtype='object')"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# renombrar la fila 0 y 1\n","dataframe.at[1, 'Name'] = \"Adam Garcia\"\n","dataframe.at[0, 'Name'] = \"Adam Garcia\""],"metadata":{"id":"n70qoZvI7pMd","executionInfo":{"status":"ok","timestamp":1745506068954,"user_tz":300,"elapsed":22,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# asociar una columna categorica a una columna numerica\n","\n","dataframe['codigo_Name'] = dataframe['Name'].astype('category').cat.codes\n","dataframe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":825},"id":"oP7qj2di5Ww6","executionInfo":{"status":"ok","timestamp":1745506070147,"user_tz":300,"elapsed":211,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"dde146e7-5f1f-4f66-87ec-cb6c7be54641"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Name                                            Address  \\\n","0        Adam Garcia          9640 Parker Street\\nSancheztown, DC 61292   \n","1        Adam Garcia  61611 Davis Stravenue Suite 353\\nNorth Stephan...   \n","2    Mr. Kevin Jones          0912 Kevin Ways\\nEast Jamestown, WA 30790   \n","3        Sharon Ford  1669 Nicole Stream Apt. 523\\nKarenshire, OK 22012   \n","4        Sylvia Cruz   4672 John Tunnel Apt. 454\\nAnthonyberg, ND 96286   \n","..               ...                                                ...   \n","995              NaN                                                NaN   \n","996    Steven Miller          69463 Roman Flat\\nBarronchester, NM 35634   \n","997        Mary Rice  085 Margaret Street\\nWest Angelachester, AZ 75391   \n","998      Dana Cortez      12200 Phillip Union\\nChristinamouth, MI 06635   \n","999   Andrew Farrell      94239 Williams Station\\nGibsonville, PW 64900   \n","\n","                            Email            Phone Number  \\\n","0             kmathis@example.net       (678)423-0991x618   \n","1         ronaldgrant@example.org  001-763-433-4746x34475   \n","2     charlottecarter@example.com        412.345.7624x374   \n","3    jeffreyblackwell@example.net      888-600-8421x48259   \n","4           pgonzalez@example.com              2673831435   \n","..                            ...                     ...   \n","995                           NaN                     NaN   \n","996      maxwellchase@example.com    +1-905-565-3828x1439   \n","997      tannerdaniel@example.org            628.255.6047   \n","998          steven45@example.org      (813)781-5304x3871   \n","999       phillipdiaz@example.org   +1-949-813-9291x21445   \n","\n","                                   Job                     Company  \\\n","0             Doctor, general practice             Robertson-Davis   \n","1                      Mining engineer             Turner-Sandoval   \n","2    Sales promotion account executive   Thomas, Graham and Haynes   \n","3               Psychotherapist, child                 Huber-Perez   \n","4                                 Make               Hernandez Inc   \n","..                                 ...                         ...   \n","995                                NaN                         NaN   \n","996                         Air broker                 Shannon Ltd   \n","997                    Quality manager  Edwards, Kim and Velazquez   \n","998                 Production manager    Jordan, Taylor and Ortiz   \n","999                   Sports therapist       King, Leonard and Ali   \n","\n","    Date of Birth  Credit Card Number          SSN    Salary  codigo_Name  \n","0      1978-10-12        5.252139e+15  309-04-1231  108329.0            3  \n","1      2002-05-27        4.724725e+15  321-21-0035  132143.0            3  \n","2      1977-03-13        3.053106e+13  804-09-5265   89179.0          577  \n","3      1996-03-16        2.712989e+15  362-59-8086   68621.0          681  \n","4      1997-04-26        3.701233e+14  077-14-5830  135509.0          717  \n","..            ...                 ...          ...       ...          ...  \n","995           NaN                 NaN          NaN       NaN           -1  \n","996    1982-08-27        3.525254e+15  290-47-9767  123622.0          705  \n","997    1999-05-05        4.986113e+12  869-81-3503   93064.0          505  \n","998    2000-01-05        4.430732e+12  372-10-9381   59678.0          163  \n","999    1980-06-11        4.150565e+18  848-85-7623  142407.0           46  \n","\n","[1000 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-7db57d4d-4ecc-4b6d-89f1-a58c57c29336\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>Email</th>\n","      <th>Phone Number</th>\n","      <th>Job</th>\n","      <th>Company</th>\n","      <th>Date of Birth</th>\n","      <th>Credit Card Number</th>\n","      <th>SSN</th>\n","      <th>Salary</th>\n","      <th>codigo_Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adam Garcia</td>\n","      <td>9640 Parker Street\\nSancheztown, DC 61292</td>\n","      <td>kmathis@example.net</td>\n","      <td>(678)423-0991x618</td>\n","      <td>Doctor, general practice</td>\n","      <td>Robertson-Davis</td>\n","      <td>1978-10-12</td>\n","      <td>5.252139e+15</td>\n","      <td>309-04-1231</td>\n","      <td>108329.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Adam Garcia</td>\n","      <td>61611 Davis Stravenue Suite 353\\nNorth Stephan...</td>\n","      <td>ronaldgrant@example.org</td>\n","      <td>001-763-433-4746x34475</td>\n","      <td>Mining engineer</td>\n","      <td>Turner-Sandoval</td>\n","      <td>2002-05-27</td>\n","      <td>4.724725e+15</td>\n","      <td>321-21-0035</td>\n","      <td>132143.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mr. Kevin Jones</td>\n","      <td>0912 Kevin Ways\\nEast Jamestown, WA 30790</td>\n","      <td>charlottecarter@example.com</td>\n","      <td>412.345.7624x374</td>\n","      <td>Sales promotion account executive</td>\n","      <td>Thomas, Graham and Haynes</td>\n","      <td>1977-03-13</td>\n","      <td>3.053106e+13</td>\n","      <td>804-09-5265</td>\n","      <td>89179.0</td>\n","      <td>577</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sharon Ford</td>\n","      <td>1669 Nicole Stream Apt. 523\\nKarenshire, OK 22012</td>\n","      <td>jeffreyblackwell@example.net</td>\n","      <td>888-600-8421x48259</td>\n","      <td>Psychotherapist, child</td>\n","      <td>Huber-Perez</td>\n","      <td>1996-03-16</td>\n","      <td>2.712989e+15</td>\n","      <td>362-59-8086</td>\n","      <td>68621.0</td>\n","      <td>681</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sylvia Cruz</td>\n","      <td>4672 John Tunnel Apt. 454\\nAnthonyberg, ND 96286</td>\n","      <td>pgonzalez@example.com</td>\n","      <td>2673831435</td>\n","      <td>Make</td>\n","      <td>Hernandez Inc</td>\n","      <td>1997-04-26</td>\n","      <td>3.701233e+14</td>\n","      <td>077-14-5830</td>\n","      <td>135509.0</td>\n","      <td>717</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>Steven Miller</td>\n","      <td>69463 Roman Flat\\nBarronchester, NM 35634</td>\n","      <td>maxwellchase@example.com</td>\n","      <td>+1-905-565-3828x1439</td>\n","      <td>Air broker</td>\n","      <td>Shannon Ltd</td>\n","      <td>1982-08-27</td>\n","      <td>3.525254e+15</td>\n","      <td>290-47-9767</td>\n","      <td>123622.0</td>\n","      <td>705</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>Mary Rice</td>\n","      <td>085 Margaret Street\\nWest Angelachester, AZ 75391</td>\n","      <td>tannerdaniel@example.org</td>\n","      <td>628.255.6047</td>\n","      <td>Quality manager</td>\n","      <td>Edwards, Kim and Velazquez</td>\n","      <td>1999-05-05</td>\n","      <td>4.986113e+12</td>\n","      <td>869-81-3503</td>\n","      <td>93064.0</td>\n","      <td>505</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>Dana Cortez</td>\n","      <td>12200 Phillip Union\\nChristinamouth, MI 06635</td>\n","      <td>steven45@example.org</td>\n","      <td>(813)781-5304x3871</td>\n","      <td>Production manager</td>\n","      <td>Jordan, Taylor and Ortiz</td>\n","      <td>2000-01-05</td>\n","      <td>4.430732e+12</td>\n","      <td>372-10-9381</td>\n","      <td>59678.0</td>\n","      <td>163</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>Andrew Farrell</td>\n","      <td>94239 Williams Station\\nGibsonville, PW 64900</td>\n","      <td>phillipdiaz@example.org</td>\n","      <td>+1-949-813-9291x21445</td>\n","      <td>Sports therapist</td>\n","      <td>King, Leonard and Ali</td>\n","      <td>1980-06-11</td>\n","      <td>4.150565e+18</td>\n","      <td>848-85-7623</td>\n","      <td>142407.0</td>\n","      <td>46</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7db57d4d-4ecc-4b6d-89f1-a58c57c29336')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7db57d4d-4ecc-4b6d-89f1-a58c57c29336 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7db57d4d-4ecc-4b6d-89f1-a58c57c29336');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2846d9a7-b42b-47b2-8b1a-6303e78416c1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2846d9a7-b42b-47b2-8b1a-6303e78416c1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2846d9a7-b42b-47b2-8b1a-6303e78416c1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_727e4415-aab1-42a4-b010-21352c7a1c1e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dataframe')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_727e4415-aab1-42a4-b010-21352c7a1c1e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dataframe');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataframe","summary":"{\n  \"name\": \"dataframe\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 792,\n        \"samples\": [\n          \"Craig Barnes\",\n          \"Stephen Ray\",\n          \"Gregory Willis\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 800,\n        \"samples\": [\n          \"37711 Jenkins Key\\nRitterview, UT 10897\",\n          \"1263 Henry Union\\nLake Robert, TX 76905\",\n          \"1700 Tanya Harbor Suite 043\\nCooperbury, NJ 69872\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Email\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 799,\n        \"samples\": [\n          \"ajackson@example.org\",\n          \"daviskimberly@example.org\",\n          \"julieburnett@example.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone Number\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 800,\n        \"samples\": [\n          \"863-307-8665x946\",\n          \"(706)943-3664x91806\",\n          \"862-879-4684x5311\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Job\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 450,\n        \"samples\": [\n          \"Scientist, audiological\",\n          \"Development worker, international aid\",\n          \"Teacher, special educational needs\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Company\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 781,\n        \"samples\": [\n          \"Hickman-Williams\",\n          \"Murphy, Mcclure and Wilson\",\n          \"Vasquez PLC\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date of Birth\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 787,\n        \"samples\": [\n          \"1965-07-01\",\n          \"1977-02-04\",\n          \"1982-02-05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit Card Number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2813239654430129e+18,\n        \"min\": 60470475819.0,\n        \"max\": 4.948692717872015e+18,\n        \"num_unique_values\": 800,\n        \"samples\": [\n          3559841467073017.0,\n          3576770629531639.0,\n          3599621934818620.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSN\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 800,\n        \"samples\": [\n          \"772-28-6618\",\n          \"809-10-8645\",\n          \"335-41-1647\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35052.04081514557,\n        \"min\": 30123.0,\n        \"max\": 149736.0,\n        \"num_unique_values\": 798,\n        \"samples\": [\n          146336.0,\n          112774.0,\n          30959.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"codigo_Name\",\n      \"properties\": {\n        \"dtype\": \"int16\",\n        \"num_unique_values\": 793,\n        \"samples\": [\n          141,\n          539,\n          153\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# agrupar un nombre con su codigo_asosiado y contar sus repeticiones\n","dataframe.groupby(['Name','codigo_Name']).size().reset_index(name='count')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"a8DlXYfO5Wb0","executionInfo":{"status":"ok","timestamp":1745506072659,"user_tz":300,"elapsed":64,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"70f4751d-fedc-4803-9cf7-d6d0368eb1bb"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Name  codigo_Name  count\n","0     Aaron Leonard            0      1\n","1      Aaron Massey            1      1\n","2       Aaron Tyler            2      1\n","3       Adam Garcia            3      3\n","4         Adam Hall            4      1\n","..              ...          ...    ...\n","787  Zachary Adkins          787      1\n","788   Zachary Combs          788      1\n","789  Zachary Graham          789      1\n","790  Zachary Obrien          790      1\n","791   Zachary Perez          791      1\n","\n","[792 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-41232103-fe4f-4958-981f-5c4849b8c8e3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>codigo_Name</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aaron Leonard</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aaron Massey</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaron Tyler</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Adam Garcia</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Adam Hall</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>787</th>\n","      <td>Zachary Adkins</td>\n","      <td>787</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>788</th>\n","      <td>Zachary Combs</td>\n","      <td>788</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>789</th>\n","      <td>Zachary Graham</td>\n","      <td>789</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>790</th>\n","      <td>Zachary Obrien</td>\n","      <td>790</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>791</th>\n","      <td>Zachary Perez</td>\n","      <td>791</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>792 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41232103-fe4f-4958-981f-5c4849b8c8e3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-41232103-fe4f-4958-981f-5c4849b8c8e3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-41232103-fe4f-4958-981f-5c4849b8c8e3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-13a0123c-ee49-4cbf-880f-111b8c8d8fcb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-13a0123c-ee49-4cbf-880f-111b8c8d8fcb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-13a0123c-ee49-4cbf-880f-111b8c8d8fcb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"dataframe\",\n  \"rows\": 792,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 792,\n        \"samples\": [\n          \"Stephanie Shannon\",\n          \"Megan Reese\",\n          \"Oscar Harmon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"codigo_Name\",\n      \"properties\": {\n        \"dtype\": \"int16\",\n        \"num_unique_values\": 792,\n        \"samples\": [\n          694,\n          528,\n          598\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["# inputacion de datos por medidas estadisticas\n","\n","\n","*   media\n","*   mediana\n","*   moda\n","\n","podemos estimar cuando uasar la media  y la mediana para inputar datos cuando:\n","Si |skew| < 0.5 → distribución casi simétrica → media.\n","Si |skew| ≥ 0.5 → sesgo moderado/fuerte → mediana.\n","\n","* Distribuciones simétricas:\n","La media y la mediana coinciden (o son muy cercanas). Usar la media preserva exactamente el centro de la masa de datos.\n","\n","* Distribuciones sesgadas:\n","Los outliers o colas largas “tiran” de la media hacia ellos, desplazando el centro. La mediana, al basarse solo en el orden, no se ve afectada por valores extremos.\n","\n"],"metadata":{"id":"stg3v4KFRHr0"}},{"cell_type":"code","source":["# detectar el tipo de dato de cada columna:\n","dataframe.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"id":"WBNENSvGRT0D","executionInfo":{"status":"ok","timestamp":1745506076080,"user_tz":300,"elapsed":131,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"092f7b4a-5f09-4b5c-9148-a87e7c7a0395"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name                   object\n","Address                object\n","Email                  object\n","Phone Number           object\n","Job                    object\n","Company                object\n","Date of Birth          object\n","Credit Card Number    float64\n","SSN                    object\n","Salary                float64\n","codigo_Name             int16\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Name</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Address</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Email</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Phone Number</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Job</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Company</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Date of Birth</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Credit Card Number</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>SSN</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Salary</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>codigo_Name</th>\n","      <td>int16</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# crear una copia del dtf solo con las columnas numericas:\n","df_numerico = dataframe.select_dtypes(include=['number'])\n","df_numerico\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"aVL9B4lSSxRo","executionInfo":{"status":"ok","timestamp":1745510521065,"user_tz":300,"elapsed":79,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"1ebdca9a-be94-48fd-b020-d8f18dd3c9a5"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Name  Credit Card Number    Salary\n","0     364        5.252139e+15  108329.0\n","1     281        4.724725e+15  132143.0\n","2     580        3.053106e+13   89179.0\n","3     684        2.712989e+15   68621.0\n","4     720        3.701233e+14  135509.0\n","..    ...                 ...       ...\n","995     0                 NaN       NaN\n","996   708        3.525254e+15  123622.0\n","997   508        4.986113e+12   93064.0\n","998   164        4.430732e+12   59678.0\n","999    47        4.150565e+18  142407.0\n","\n","[1000 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-c59481bc-f360-4d4a-82a6-19f93285c002\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Credit Card Number</th>\n","      <th>Salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>364</td>\n","      <td>5.252139e+15</td>\n","      <td>108329.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>281</td>\n","      <td>4.724725e+15</td>\n","      <td>132143.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>580</td>\n","      <td>3.053106e+13</td>\n","      <td>89179.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>684</td>\n","      <td>2.712989e+15</td>\n","      <td>68621.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>720</td>\n","      <td>3.701233e+14</td>\n","      <td>135509.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>708</td>\n","      <td>3.525254e+15</td>\n","      <td>123622.0</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>508</td>\n","      <td>4.986113e+12</td>\n","      <td>93064.0</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>164</td>\n","      <td>4.430732e+12</td>\n","      <td>59678.0</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>47</td>\n","      <td>4.150565e+18</td>\n","      <td>142407.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c59481bc-f360-4d4a-82a6-19f93285c002')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c59481bc-f360-4d4a-82a6-19f93285c002 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c59481bc-f360-4d4a-82a6-19f93285c002');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8bb27c55-f2f4-4a2c-9abe-ec3efa6f890b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8bb27c55-f2f4-4a2c-9abe-ec3efa6f890b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8bb27c55-f2f4-4a2c-9abe-ec3efa6f890b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b7ba2289-8988-4327-b95f-0966127e2a69\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_numerico')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b7ba2289-8988-4327-b95f-0966127e2a69 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_numerico');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_numerico","summary":"{\n  \"name\": \"df_numerico\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"int16\",\n        \"num_unique_values\": 795,\n        \"samples\": [\n          288,\n          496,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit Card Number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2813239654430129e+18,\n        \"min\": 60470475819.0,\n        \"max\": 4.948692717872015e+18,\n        \"num_unique_values\": 800,\n        \"samples\": [\n          3559841467073017.0,\n          3576770629531639.0,\n          3599621934818620.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35052.04081514557,\n        \"min\": 30123.0,\n        \"max\": 149736.0,\n        \"num_unique_values\": 798,\n        \"samples\": [\n          146336.0,\n          112774.0,\n          30959.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["# identificar que valores nulos tenemos :\n","df_numerico.isnull().sum()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"4oMYmwkJT-br","executionInfo":{"status":"ok","timestamp":1745506080350,"user_tz":300,"elapsed":28,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"c6107221-115a-4b92-b93e-3e0796c69f30"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Credit Card Number    200\n","Salary                200\n","codigo_Name             0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Credit Card Number</th>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>Salary</th>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>codigo_Name</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# ejercicio para entender la logica para calcular la asimetria de los datos :\n","\n","\n","# 1. Creamos el DataFrame de ejemplo\n","df_ej = pd.DataFrame({\n","    'peso_kg': [70, 65, 80, 120, 55, None, 60, 75, 200, None]\n","})\n","\n","# 2. Calculamos la asimetría\n","skewness = df_ej['peso_kg'].skew()\n","print(f\"Asimetría de 'peso_kg': {skewness:.3f}\")\n","\n","# 3. Decidimos qué estadístico usar\n","if abs(skewness) < 0.5:            # abs() valor absoluto mide la distancia que hay de un numero con respecto al 0\n","    metodo = 'media'\n","    valor_imputar = df_ej['peso_kg'].mean()\n","else:\n","    metodo = 'mediana'\n","    valor_imputar = df_ej['peso_kg'].median()\n","\n","print(f\" → |skewness| = {abs(skewness):.3f}, usamos {metodo} = {valor_imputar:.1f} kg\")\n","\n","# 4. Imputamos los valores faltantes\n","df_ej['peso_imputado'] = df_ej['peso_kg'].fillna(valor_imputar)\n","\n","# 5. Mostramos el resultado\n","print(\"\\nDataFrame con imputación:\")\n","print(df_ej)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aw3fEqRcKxUS","executionInfo":{"status":"ok","timestamp":1745506081523,"user_tz":300,"elapsed":40,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"29fb18ae-2ce0-4eb7-9d05-0c1eade56323"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Asimetría de 'peso_kg': 2.051\n"," → |skewness| = 2.051, usamos mediana = 72.5 kg\n","\n","DataFrame con imputación:\n","   peso_kg  peso_imputado\n","0     70.0           70.0\n","1     65.0           65.0\n","2     80.0           80.0\n","3    120.0          120.0\n","4     55.0           55.0\n","5      NaN           72.5\n","6     60.0           60.0\n","7     75.0           75.0\n","8    200.0          200.0\n","9      NaN           72.5\n"]}]},{"cell_type":"code","source":["# ejercicio practico\n","def metodo_imputacion(df, columna):\n","    asimetria = df[columna].skew()\n","\n","    if abs(asimetria) < 0.5:\n","        metodo = 'media'\n","        valor_imputar = df[columna].mean()\n","    else:\n","        metodo = 'mediana'\n","        valor_imputar = df[columna].median()\n","\n","    print(f\"Asimetría de '{columna}': {asimetria:.3f} \\n\")\n","    print(f\"Debemos usar el método: {metodo} \\n\")\n","    print(f\"Valor a imputar: {valor_imputar:.3f} \\n \")\n","\n","    return valor_imputar\n","\n","valor1 = metodo_imputacion(df_numerico, 'Credit Card Number')"],"metadata":{"id":"XMHuW0nBU6YM","executionInfo":{"status":"ok","timestamp":1745506085008,"user_tz":300,"elapsed":28,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e0a3a7a4-ccf5-4deb-d4db-06ffda6f13ac"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Asimetría de 'Credit Card Number': 2.947 \n","\n","Debemos usar el método: mediana \n","\n","Valor a imputar: 3510381659221181.500 \n"," \n"]}]},{"cell_type":"code","source":["valor1 = metodo_imputacion(df_numerico, 'Credit Card Number')\n","\n","valor2 = metodo_imputacion(df_numerico, 'Salary')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bi0jTWaRVSV0","executionInfo":{"status":"ok","timestamp":1745340000604,"user_tz":300,"elapsed":20,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"c9b6f64a-7747-45f7-ebd7-edddc81f8933"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Asimetría de 'Credit Card Number': 2.947 \n","\n","Debemos usar el método: mediana \n","\n","Valor a imputar: 3510381659221181.500 \n"," \n","Asimetría de 'Salary': 0.064 \n","\n","Debemos usar el método: media \n","\n","Valor a imputar: 87627.550 \n"," \n"]}]},{"cell_type":"code","source":["#inputar datos\n","df_numerico['Credit Card Number'] = df_numerico['Credit Card Number'].fillna(valor1)\n","df_numerico['Salary'] = df_numerico['Salary'].fillna(valor2)\n","df_numerico"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"0NlMvT6YXcVQ","executionInfo":{"status":"ok","timestamp":1745340059328,"user_tz":300,"elapsed":74,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"c7d6ec53-ede5-4110-be14-4993e30a1a99"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Credit Card Number     Salary  codigo_Name\n","0          5.252139e+15  108329.00            3\n","1          4.724725e+15  132143.00            3\n","2          3.053106e+13   89179.00          577\n","3          2.712989e+15   68621.00          681\n","4          3.701233e+14  135509.00          717\n","..                  ...        ...          ...\n","995        3.510382e+15   87627.55           -1\n","996        3.525254e+15  123622.00          705\n","997        4.986113e+12   93064.00          505\n","998        4.430732e+12   59678.00          163\n","999        4.150565e+18  142407.00           46\n","\n","[1000 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-e3db0d6b-229c-45c3-b741-91988a54f700\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Credit Card Number</th>\n","      <th>Salary</th>\n","      <th>codigo_Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.252139e+15</td>\n","      <td>108329.00</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.724725e+15</td>\n","      <td>132143.00</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.053106e+13</td>\n","      <td>89179.00</td>\n","      <td>577</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.712989e+15</td>\n","      <td>68621.00</td>\n","      <td>681</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.701233e+14</td>\n","      <td>135509.00</td>\n","      <td>717</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>3.510382e+15</td>\n","      <td>87627.55</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>3.525254e+15</td>\n","      <td>123622.00</td>\n","      <td>705</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>4.986113e+12</td>\n","      <td>93064.00</td>\n","      <td>505</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>4.430732e+12</td>\n","      <td>59678.00</td>\n","      <td>163</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>4.150565e+18</td>\n","      <td>142407.00</td>\n","      <td>46</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3db0d6b-229c-45c3-b741-91988a54f700')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e3db0d6b-229c-45c3-b741-91988a54f700 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e3db0d6b-229c-45c3-b741-91988a54f700');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a6e67ff0-959c-40a1-973c-8048c6c2666e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a6e67ff0-959c-40a1-973c-8048c6c2666e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a6e67ff0-959c-40a1-973c-8048c6c2666e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1ebc2dd9-1048-4fde-af0f-91ac4ed38c9d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_numerico')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1ebc2dd9-1048-4fde-af0f-91ac4ed38c9d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_numerico');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_numerico","summary":"{\n  \"name\": \"df_numerico\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"Credit Card Number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1567375026513705e+18,\n        \"min\": 60470475819.0,\n        \"max\": 4.948692717872015e+18,\n        \"num_unique_values\": 801,\n        \"samples\": [\n          3559841467073017.0,\n          3576770629531639.0,\n          30440646122137.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31347.5752994894,\n        \"min\": 30123.0,\n        \"max\": 149736.0,\n        \"num_unique_values\": 799,\n        \"samples\": [\n          146336.0,\n          112774.0,\n          104645.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"codigo_Name\",\n      \"properties\": {\n        \"dtype\": \"int16\",\n        \"num_unique_values\": 793,\n        \"samples\": [\n          141,\n          539,\n          153\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":84}]},{"cell_type":"markdown","source":["# Inputacion por llenado hacia adelante (ffill) o hacia atrás (bfill) en un DataFrame.\n","\n","\n","\n","*   \"Forward Fill\" rellena los NaN con el último valor conocido anterior en la misma columna. fillna(method='ffill')\n","\n","*    \"Backward Fill\" rellena los NaN con el siguiente valor no nulo en la misma columna. fillna(method='bfill')\n","\n","\n","¿Cuándo usar ffill o bfill?\n","\n","ffill\tCuando los valores anteriores tienen sentido lógico (por ejemplo, una medición que se mantiene igual si no hay datos nuevos).\n","\n","bfill\tCuando sabes que el valor que falta es igual al siguiente o esperas que el próximo valor lo represente mejor."],"metadata":{"id":"9NkAEJ2FzOtp"}},{"cell_type":"markdown","source":[],"metadata":{"id":"eoDOlEke1RP1"}},{"cell_type":"code","source":["# ejercicio practico\n","\n","\n","df = pd.DataFrame({\n","    'A': [1, np.nan, np.nan, 4, 5],\n","    'B': [np.nan, 2, np.nan, 4, np.nan]\n","\n","})\n","\n","df\n","\n","df_nuevo = df.fillna(method='ffill')\n","df_nuevo\n","\n","df_ultimo = df_nuevo.fillna(method='bfill')\n","df_ultimo\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"tdHMeq20zkyt","executionInfo":{"status":"ok","timestamp":1745348622231,"user_tz":300,"elapsed":84,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"0866555c-939d-4af9-c48d-e8c8be619bcc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-116-152b9de40ca8>:12: FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  df_nuevo = df.fillna(method='ffill')\n","<ipython-input-116-152b9de40ca8>:15: FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  df_ultimo = df_nuevo.fillna(method='bfill')\n"]},{"output_type":"execute_result","data":{"text/plain":["     A    B\n","0  1.0  2.0\n","1  1.0  2.0\n","2  1.0  2.0\n","3  4.0  4.0\n","4  5.0  4.0"],"text/html":["\n","  <div id=\"df-5db55259-97ed-4894-9891-c8200734e595\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5db55259-97ed-4894-9891-c8200734e595')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5db55259-97ed-4894-9891-c8200734e595 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5db55259-97ed-4894-9891-c8200734e595');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aaa8defd-5577-491b-82ad-58d0c214cd0a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aaa8defd-5577-491b-82ad-58d0c214cd0a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aaa8defd-5577-491b-82ad-58d0c214cd0a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b824a542-0372-4856-b0d1-601e4be5a1b0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_ultimo')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b824a542-0372-4856-b0d1-601e4be5a1b0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_ultimo');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_ultimo","summary":"{\n  \"name\": \"df_ultimo\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9493588689617927,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          4.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"B\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0954451150103321,\n        \"min\": 2.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":116}]},{"cell_type":"markdown","source":["# imputación por interpolación\n","\n","Calcula una línea recta entre el valor anterior y posterior al NaN, y coloca un punto intermedio.\n","\n","¿Cuándo usar interpolación?\n","\n","Es útil cuando:\n","\n","Estás trabajando con datos secuenciales o series temporales.\n","\n","La variable tiene una tendencia o patrón progresivo (ej: precios, temperatura, sensores).\n","\n","df.interpolate(method='linear')       # Línea recta (por defecto)\n","\n","df.interpolate(method='time')         # Usa el índice de tiempo para interpolar\n","\n","df.interpolate(method='polynomial', order=2)  # Curvas polinómicas\n","\n","df.interpolate(method='spline', order=2)      # Más suave que el polinomial\n","\n","df.interpolate(method='pad')          # Igual a fillna(method='ffill')\n","\n","df.interpolate(method='nearest')      # Usa el valor más cercano"],"metadata":{"id":"Vlzyc4FI65CT"}},{"cell_type":"code","source":["# ejercicio practico\n","\n","df = pd.DataFrame({\n","    'A': [1, np.nan, np.nan, 4, 5],\n","    'B': [10, 20, np.nan, 40, 50]\n","})\n","print(\"DataFrame original:\")\n","print(df)\n","\n","# Imputación por interpolación\n","df_interpolado = df.interpolate()\n","\n","print(\"\\nDataFrame interpolado:\")\n","print(df_interpolado)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a5XjB4eV7sSW","executionInfo":{"status":"ok","timestamp":1745350344304,"user_tz":300,"elapsed":53,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"83796c80-f330-46e1-bd17-e5fda708573d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["DataFrame original:\n","     A     B\n","0  1.0  10.0\n","1  NaN  20.0\n","2  NaN   NaN\n","3  4.0  40.0\n","4  5.0  50.0\n","\n","DataFrame interpolado:\n","     A     B\n","0  1.0  10.0\n","1  2.0  20.0\n","2  3.0  30.0\n","3  4.0  40.0\n","4  5.0  50.0\n"]}]},{"cell_type":"markdown","source":["# Imputación por KNN\n","\n","Se utiliza especialmente útil cuando hay relaciones no lineales entre columnas.\n","\n","si tenemos variables categoricas debemos pasarlas a numericas para realizar la transformacion"],"metadata":{"id":"lA2MwJPxTTN8"}},{"cell_type":"code","source":["\n","from sklearn.impute import KNNImputer # importar libreria\n","\n","# Crear un DataFrame mixto con valores faltantes\n","df = pd.DataFrame({\n","    'Edad': [25, 30, np.nan, 20, 35, np.nan, 28, 10],\n","    'Genero': ['M', 'F', 'F', np.nan, 'M', 'F', 'M', np.nan],\n","    'Ingreso': [2000, np.nan, 3200, 4000, 3700, 2900, np.nan, 4100],\n","    'Ciudad': ['Bogotá', 'Medellín', np.nan, 'Cali', 'Bogotá', 'Cali', 'Cali', 'Medellín'],\n","    'Nivel_educativo': ['Bachiller', 'Universitario', 'Técnico', np.nan, 'Bachiller', 'Técnico', 'Bachiller', 'Universitario']\n","})\n","\n","print(\"🔍 Data original con valores nulos:\")\n","print(df)\n","\n","# Codificación ordinal de variables categóricas\n","df['Genero'] = df['Genero'].map({'M': 0, 'F': 1})\n","df['Ciudad'] = df['Ciudad'].map({'Bogotá': 0, 'Medellín': 1, 'Cali': 2})\n","df['Nivel_educativo'] = df['Nivel_educativo'].map({'Bachiller': 0, 'Técnico': 1, 'Universitario': 2})\n","# Aplicar KNNImputer\n","imputer = KNNImputer(n_neighbors=3)\n","df_imputado = pd.DataFrame(imputer.fit_transform(df), columns=df.columns)\n","\n","# Redondear columnas categóricas e invertir codificación\n","df_imputado['Genero'] = df_imputado['Genero'].round().map({0: 'M', 1: 'F'})\n","df_imputado['Ciudad'] = df_imputado['Ciudad'].round().map({0: 'Bogotá', 1: 'Medellín', 2: 'Cali'})\n","df_imputado['Nivel_educativo'] = df_imputado['Nivel_educativo'].round().map({0: 'Bachiller', 1: 'Técnico', 2: 'Universitario'})\n","\n","print(\"\\n✅ Data imputada con KNN y variables categóricas decodificadas:\")\n","print(df_imputado)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KershvFEVgSR","executionInfo":{"status":"ok","timestamp":1745509810867,"user_tz":300,"elapsed":53,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"2a6254b1-f77c-480b-d001-33bf960a4156"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["🔍 Data original con valores nulos:\n","   Edad Genero  Ingreso    Ciudad Nivel_educativo\n","0  25.0      M   2000.0    Bogotá       Bachiller\n","1  30.0      F      NaN  Medellín   Universitario\n","2   NaN      F   3200.0       NaN         Técnico\n","3  20.0    NaN   4000.0      Cali             NaN\n","4  35.0      M   3700.0    Bogotá       Bachiller\n","5   NaN      F   2900.0      Cali         Técnico\n","6  28.0      M      NaN      Cali       Bachiller\n","7  10.0    NaN   4100.0  Medellín   Universitario\n","\n","✅ Data imputada con KNN y variables categóricas decodificadas:\n","   Edad Genero      Ingreso    Ciudad Nivel_educativo\n","0  25.0      M  2000.000000    Bogotá       Bachiller\n","1  30.0      F  3266.666667  Medellín   Universitario\n","2  31.0      F  3200.000000      Cali         Técnico\n","3  20.0      M  4000.000000      Cali         Técnico\n","4  35.0      M  3700.000000    Bogotá       Bachiller\n","5  31.0      F  2900.000000      Cali         Técnico\n","6  28.0      M  2700.000000      Cali       Bachiller\n","7  10.0      M  4100.000000  Medellín   Universitario\n"]}]},{"cell_type":"markdown","source":["**Imputaciones** Múltiples por Ecuaciones Encadenadas (MICE)\n","\n","\n"],"metadata":{"id":"GgNjLPMfdv9m"}},{"cell_type":"code","source":["\n","from sklearn.experimental import enable_iterative_imputer  # Activar el uso experimental\n","from sklearn.impute import IterativeImputer\n","\n","# 1. Creamos un DataFrame con valores faltantes\n","data = {\n","    'Edad': [25, 30, np.nan, 35, 40],\n","    'Salario': [50000, 60000, 55000, np.nan, 70000],\n","    'Años_de_Experiencia': [2, 5, 3, 7, np.nan]\n","}\n","\n","df = pd.DataFrame(data)\n","print(\"✅ Datos originales con valores faltantes:\")\n","print(df)\n","\n","# 2. Aplicamos MICE usando IterativeImputer\n","imputer = IterativeImputer(random_state=42)\n","df_imputado = imputer.fit_transform(df)\n","\n","# 3. Convertimos el resultado a un nuevo DataFrame\n","df_imputado = pd.DataFrame(df_imputado, columns=df.columns)\n","\n","print(\"\\n✅ Datos después de imputación MICE:\")\n","print(df_imputado.round(2))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HnVw8Y9xVd56","executionInfo":{"status":"ok","timestamp":1745525563671,"user_tz":300,"elapsed":90,"user":{"displayName":"julian jimenez toro","userId":"18159071892345354407"}},"outputId":"cefa2b20-3310-4035-df7c-556565a3348b"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["✅ Datos originales con valores faltantes:\n","   Edad  Salario  Años_de_Experiencia\n","0  25.0  50000.0                  2.0\n","1  30.0  60000.0                  5.0\n","2   NaN  55000.0                  3.0\n","3  35.0      NaN                  7.0\n","4  40.0  70000.0                  NaN\n","\n","✅ Datos después de imputación MICE:\n","    Edad   Salario  Años_de_Experiencia\n","0  25.00  50000.00                 2.00\n","1  30.00  60000.00                 5.00\n","2  27.86  55000.00                 3.00\n","3  35.00  65082.23                 7.00\n","4  40.00  70000.00                 8.47\n"]}]}]}